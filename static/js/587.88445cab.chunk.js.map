{"version":3,"file":"static/js/587.88445cab.chunk.js","mappings":"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","sources":["../node_modules/@mantine/core/src/components/Tabs/Tabs.context.ts","../node_modules/@mantine/core/src/components/Tabs/TabsList/TabsList.tsx","../node_modules/@mantine/core/src/components/Tabs/TabsPanel/TabsPanel.tsx","../node_modules/@mantine/core/src/components/Tabs/TabsTab/TabsTab.tsx","../node_modules/@mantine/core/src/components/Tabs/Tabs.tsx","pages/Services.tsx","../node_modules/@tabler/icons-react/src/icons/IconArrowRight.js","../node_modules/@mantine/core/src/components/Badge/Badge.tsx","../node_modules/@mantine/core/src/components/List/List.context.ts","../node_modules/@mantine/core/src/components/List/ListItem/ListItem.tsx","../node_modules/@mantine/core/src/components/List/List.tsx","../node_modules/@mantine/core/src/core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.ts","../node_modules/@mantine/core/src/core/utils/find-element-ancestor/find-element-ancestor.ts","../node_modules/@mantine/core/src/core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.ts","../node_modules/@mantine/core/src/core/utils/get-safe-id/get-safe-id.ts","../node_modules/@mantine/hooks/src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import { createSafeContext, GetStylesApi } from '../../core';\nimport type { TabsFactory } from './Tabs';\n\nexport interface TabsContextValue {\n  id: string;\n  value: string | null;\n  orientation: 'horizontal' | 'vertical' | undefined;\n  loop: boolean | undefined;\n  activateTabWithKeyboard: boolean | undefined;\n  allowTabDeactivation: boolean | undefined;\n  onChange: (value: string | null) => void;\n  getTabId: (value: string) => string;\n  getPanelId: (value: string) => string;\n  variant: string | undefined;\n  color: string | undefined;\n  radius: string | number | undefined;\n  inverted: boolean | undefined;\n  keepMounted: boolean | undefined;\n  placement: 'right' | 'left' | undefined;\n  unstyled: boolean | undefined;\n  getStyles: GetStylesApi<TabsFactory>;\n}\n\nexport const [TabsProvider, useTabsContext] = createSafeContext<TabsContextValue>(\n  'Tabs component was not found in the tree'\n);\n","import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsListStylesNames = 'list';\n\nexport interface TabsListProps\n  extends BoxProps,\n    CompoundStylesApiProps<TabsListFactory>,\n    ElementProps<'div'> {\n  /** `Tabs.Tab` components */\n  children: React.ReactNode;\n\n  /** Determines whether tabs should take all available space, `false` by default */\n  grow?: boolean;\n\n  /** Tabs alignment, `flex-start` by default */\n  justify?: React.CSSProperties['justifyContent'];\n}\n\nexport type TabsListFactory = Factory<{\n  props: TabsListProps;\n  ref: HTMLDivElement;\n  stylesNames: TabsListStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsListProps> = {};\n\nexport const TabsList = factory<TabsListFactory>((_props, ref) => {\n  const props = useProps('TabsList', defaultProps, _props);\n  const { children, className, grow, justify, classNames, styles, style, mod, ...others } = props;\n\n  const ctx = useTabsContext();\n\n  return (\n    <Box\n      {...others}\n      {...ctx.getStyles('list', {\n        className,\n        style,\n        classNames,\n        styles,\n        props,\n        variant: ctx.variant,\n      })}\n      ref={ref}\n      role=\"tablist\"\n      variant={ctx.variant}\n      mod={[\n        {\n          grow,\n          orientation: ctx.orientation,\n          placement: ctx.orientation === 'vertical' && ctx.placement,\n          inverted: ctx.inverted,\n        },\n        mod,\n      ]}\n      aria-orientation={ctx.orientation}\n      __vars={{ '--tabs-justify': justify }}\n    >\n      {children}\n    </Box>\n  );\n});\n\nTabsList.classes = classes;\nTabsList.displayName = '@mantine/core/TabsList';\n","import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsPanelStylesNames = 'panel';\n\nexport interface TabsPanelProps\n  extends BoxProps,\n    CompoundStylesApiProps<TabsPanelFactory>,\n    ElementProps<'div'> {\n  /** Panel content */\n  children: React.ReactNode;\n\n  /** If set to `true`, the content will be kept mounted, even if `keepMounted` is set `false` in the parent `Tabs` component */\n  keepMounted?: boolean;\n\n  /** Value of associated control */\n  value: string;\n}\n\nexport type TabsPanelFactory = Factory<{\n  props: TabsPanelProps;\n  ref: HTMLDivElement;\n  stylesNames: TabsPanelStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsPanelProps> = {};\n\nexport const TabsPanel = factory<TabsPanelFactory>((_props, ref) => {\n  const props = useProps('TabsPanel', defaultProps, _props);\n  const { children, className, value, classNames, styles, style, mod, keepMounted, ...others } =\n    props;\n\n  const ctx = useTabsContext();\n\n  const active = ctx.value === value;\n  const content = ctx.keepMounted || keepMounted ? children : active ? children : null;\n\n  return (\n    <Box\n      {...others}\n      {...ctx.getStyles('panel', {\n        className,\n        classNames,\n        styles,\n        style: [style, !active ? { display: 'none' } : undefined],\n        props,\n      })}\n      ref={ref}\n      mod={[{ orientation: ctx.orientation }, mod]}\n      role=\"tabpanel\"\n      id={ctx.getPanelId(value)}\n      aria-labelledby={ctx.getTabId(value)}\n    >\n      {content}\n    </Box>\n  );\n});\n\nTabsPanel.classes = classes;\nTabsPanel.displayName = '@mantine/core/TabsPanel';\n","import {\n  CompoundStylesApiProps,\n  createScopedKeydownHandler,\n  ElementProps,\n  factory,\n  Factory,\n  getThemeColor,\n  MantineColor,\n  useDirection,\n  useMantineTheme,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton, UnstyledButtonProps } from '../../UnstyledButton';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsTabStylesNames = 'tab' | 'tabSection' | 'tabLabel';\n\nexport interface TabsTabProps\n  extends Omit<UnstyledButtonProps, 'classNames' | 'styles' | 'vars'>,\n    CompoundStylesApiProps<TabsTabFactory>,\n    ElementProps<'button'> {\n  /** Value of associated panel */\n  value: string;\n\n  /** Tab label */\n  children?: React.ReactNode;\n\n  /** Content displayed on the right side of the label, for example, icon */\n  rightSection?: React.ReactNode;\n\n  /** Content displayed on the left side of the label, for example, icon */\n  leftSection?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color, controls control color based on `variant` */\n  color?: MantineColor;\n}\n\nexport type TabsTabFactory = Factory<{\n  props: TabsTabProps;\n  ref: HTMLButtonElement;\n  stylesNames: TabsTabStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<TabsTabProps> = {};\n\nexport const TabsTab = factory<TabsTabFactory>((_props, ref) => {\n  const props = useProps('TabsTab', defaultProps, _props);\n  const {\n    className,\n    children,\n    rightSection,\n    leftSection,\n    value,\n    onClick,\n    onKeyDown,\n    disabled,\n    color,\n    style,\n    classNames,\n    styles,\n    vars,\n    mod,\n    tabIndex,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n  const { dir } = useDirection();\n  const ctx = useTabsContext();\n  const active = value === ctx.value;\n  const activateTab = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    ctx.onChange(ctx.allowTabDeactivation ? (value === ctx.value ? null : value) : value);\n    onClick?.(event);\n  };\n\n  const stylesApiProps = { classNames, styles, props };\n\n  return (\n    <UnstyledButton\n      {...others}\n      {...ctx.getStyles('tab', { className, style, variant: ctx.variant, ...stylesApiProps })}\n      disabled={disabled}\n      unstyled={ctx.unstyled}\n      variant={ctx.variant}\n      mod={[\n        {\n          active,\n          disabled,\n          orientation: ctx.orientation,\n          inverted: ctx.inverted,\n          placement: ctx.orientation === 'vertical' && ctx.placement,\n        },\n        mod,\n      ]}\n      ref={ref}\n      role=\"tab\"\n      id={ctx.getTabId(value)}\n      aria-selected={active}\n      tabIndex={tabIndex !== undefined ? tabIndex : active || ctx.value === null ? 0 : -1}\n      aria-controls={ctx.getPanelId(value)}\n      onClick={activateTab}\n      __vars={{ '--tabs-color': color ? getThemeColor(color, theme) : undefined }}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[role=\"tab\"]',\n        parentSelector: '[role=\"tablist\"]',\n        activateOnFocus: ctx.activateTabWithKeyboard,\n        loop: ctx.loop,\n        orientation: ctx.orientation || 'horizontal',\n        dir,\n        onKeyDown,\n      })}\n    >\n      {leftSection && (\n        <span {...ctx.getStyles('tabSection', stylesApiProps)} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      {children && <span {...ctx.getStyles('tabLabel', stylesApiProps)}>{children}</span>}\n      {rightSection && (\n        <span {...ctx.getStyles('tabSection', stylesApiProps)} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </UnstyledButton>\n  );\n});\n\nTabsTab.classes = classes;\nTabsTab.displayName = '@mantine/core/TabsTab';\n","import { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSafeId,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { TabsProvider } from './Tabs.context';\nimport { TabsList, TabsListStylesNames } from './TabsList/TabsList';\nimport { TabsPanel, TabsPanelStylesNames } from './TabsPanel/TabsPanel';\nimport { TabsTab, TabsTabStylesNames } from './TabsTab/TabsTab';\nimport classes from './Tabs.module.css';\n\nexport type TabsStylesNames =\n  | 'root'\n  | TabsListStylesNames\n  | TabsPanelStylesNames\n  | TabsTabStylesNames;\n\nexport type TabsVariant = 'default' | 'outline' | 'pills';\nexport type TabsCssVariables = {\n  root: '--tabs-color' | '--tabs-radius';\n};\n\nexport interface TabsProps\n  extends BoxProps,\n    StylesApiProps<TabsFactory>,\n    ElementProps<'div', 'defaultValue' | 'value' | 'onChange'> {\n  /** Default value for uncontrolled component */\n  defaultValue?: string | null;\n\n  /** Value for controlled component */\n  value?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string | null) => void;\n\n  /** Tabs orientation, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** `Tabs.List` placement relative to `Tabs.Panel`, applicable only when `orientation=\"vertical\"`, `'left'` by default */\n  placement?: 'left' | 'right';\n\n  /** Base id, used to generate ids to connect labels with controls, generated randomly by default */\n  id?: string;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Determines whether tab should be activated with arrow key press, `true` by default */\n  activateTabWithKeyboard?: boolean;\n\n  /** Determines whether tab can be deactivated, `false` by default */\n  allowTabDeactivation?: boolean;\n\n  /** Tabs content */\n  children?: React.ReactNode;\n\n  /** Changes colors of `Tabs.Tab` components when variant is `pills` or `default`, does nothing for other variants */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether tabs should have inverted styles, `false` by default */\n  inverted?: boolean;\n\n  /** If set to `false`, `Tabs.Panel` content will be unmounted when the associated tab is not active, `true` by default */\n  keepMounted?: boolean;\n\n  /** Determines whether active item text color should depend on `background-color` of the indicator. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. Only applicable when `variant=\"pills\"` */\n  autoContrast?: boolean;\n}\n\nexport type TabsFactory = Factory<{\n  props: TabsProps;\n  ref: HTMLDivElement;\n  variant: TabsVariant;\n  stylesNames: TabsStylesNames;\n  vars: TabsCssVariables;\n  staticComponents: {\n    Tab: typeof TabsTab;\n    Panel: typeof TabsPanel;\n    List: typeof TabsList;\n  };\n}>;\n\nconst VALUE_ERROR =\n  'Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value';\n\nconst defaultProps: Partial<TabsProps> = {\n  keepMounted: true,\n  orientation: 'horizontal',\n  loop: true,\n  activateTabWithKeyboard: true,\n  allowTabDeactivation: false,\n  unstyled: false,\n  inverted: false,\n  variant: 'default',\n  placement: 'left',\n};\n\nconst varsResolver = createVarsResolver<TabsFactory>((theme, { radius, color, autoContrast }) => ({\n  root: {\n    '--tabs-radius': getRadius(radius),\n    '--tabs-color': getThemeColor(color, theme),\n    '--tabs-text-color': getAutoContrastValue(autoContrast, theme)\n      ? getContrastColor({ color, theme, autoContrast })\n      : undefined,\n  },\n}));\n\nexport const Tabs = factory<TabsFactory>((_props, ref) => {\n  const props = useProps('Tabs', defaultProps, _props);\n  const {\n    defaultValue,\n    value,\n    onChange,\n    orientation,\n    children,\n    loop,\n    id,\n    activateTabWithKeyboard,\n    allowTabDeactivation,\n    variant,\n    color,\n    radius,\n    inverted,\n    placement,\n    keepMounted,\n    classNames,\n    styles,\n    unstyled,\n    className,\n    style,\n    vars,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const uid = useId(id);\n\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const getStyles = useStyles<TabsFactory>({\n    name: 'Tabs',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TabsProvider\n      value={{\n        placement,\n        value: currentTab,\n        orientation,\n        id: uid,\n        loop,\n        activateTabWithKeyboard,\n        getTabId: getSafeId(`${uid}-tab`, VALUE_ERROR),\n        getPanelId: getSafeId(`${uid}-panel`, VALUE_ERROR),\n        onChange: setCurrentTab,\n        allowTabDeactivation,\n        variant,\n        color,\n        radius,\n        inverted,\n        keepMounted,\n        unstyled,\n        getStyles,\n      }}\n    >\n      <Box\n        ref={ref}\n        id={uid}\n        variant={variant}\n        mod={[\n          {\n            orientation,\n            inverted: orientation === 'horizontal' && inverted,\n            placement: orientation === 'vertical' && placement,\n          },\n          mod,\n        ]}\n        {...getStyles('root')}\n        {...others}\n      >\n        {children}\n      </Box>\n    </TabsProvider>\n  );\n});\n\nTabs.classes = classes;\nTabs.displayName = '@mantine/core/Tabs';\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\n","import React, { useState } from 'react';\r\nimport { Container, Grid, Stack, Title, Text, Card, Badge, List, Button, Tabs, Group, Box } from '@mantine/core';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { IconLeaf, IconTree, IconAxe, IconPhone, IconArrowRight } from '@tabler/icons-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Service } from '../types';\r\n\r\n// Create a motion component for the Card content\r\nconst MotionWrapper = ({ children }: { children: React.ReactNode }) => (\r\n  <motion.div\r\n    style={{ height: '100%' }}\r\n    whileHover={{ translateY: -5 }}\r\n    transition={{ duration: 0.2 }}\r\n  >\r\n    {children}\r\n  </motion.div>\r\n);\r\n\r\nconst Services: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<string | null>('residential');\r\n\r\n  const services: Service[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Tree Removal',\r\n      slug: 'tree-removal',\r\n      type: 'residential',\r\n      description: 'Professional and safe tree removal services for your property.',\r\n      features: [\r\n        'Complete tree removal',\r\n        'Stump removal options',\r\n        'Clean-up included',\r\n        'Free assessment'\r\n      ],\r\n      image: '/assets/services/tree-removal.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Commercial Tree Management',\r\n      slug: 'commercial-tree-management',\r\n      type: 'commercial',\r\n      description: 'Comprehensive tree management solutions for commercial properties.',\r\n      features: [\r\n        'Site assessment',\r\n        'Risk management',\r\n        'Regular maintenance',\r\n        'Emergency response available'\r\n      ],\r\n      image: '/assets/services/commercial.jpg'\r\n    }\r\n  ];\r\n\r\n  const residentialServices = services.filter(service => service.type === 'residential');\r\n  const commercialServices = services.filter(service => service.type === 'commercial');\r\n\r\n  return (\r\n    <Container size=\"xl\" py={80}>\r\n      <Stack gap={50}>\r\n        <div>\r\n          <Title order={1} size=\"3rem\" ta=\"center\" mb=\"xl\">Our Services</Title>\r\n          <Text size=\"xl\" c=\"dimmed\" maw={800} mx=\"auto\" ta=\"center\">\r\n            Professional tree care services for residential and commercial properties. Our expert arborists ensure the health and safety of your trees.\r\n          </Text>\r\n        </div>\r\n\r\n        <Tabs value={activeTab} onChange={setActiveTab} variant=\"pills\">\r\n          <Tabs.List justify=\"center\" mb=\"xl\">\r\n            <Tabs.Tab value=\"residential\">\r\n              Residential Services\r\n            </Tabs.Tab>\r\n            <Tabs.Tab value=\"commercial\">\r\n              Commercial Services\r\n            </Tabs.Tab>\r\n          </Tabs.List>\r\n\r\n          <AnimatePresence mode=\"wait\">\r\n            <Tabs.Panel value=\"residential\">\r\n              <Grid>\r\n                {residentialServices.map((service) => (\r\n                  <Grid.Col key={service.id} span={{ base: 12, sm: 6, lg: 4 }}>\r\n                    <MotionWrapper>\r\n                      <Card\r\n                        withBorder\r\n                        radius=\"md\"\r\n                        padding=\"lg\"\r\n                        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                      >\r\n                        <Card.Section>\r\n                          <img\r\n                            src={service.image}\r\n                            height={160}\r\n                            alt={service.title}\r\n                            style={{ objectFit: 'cover', width: '100%' }}\r\n                          />\r\n                        </Card.Section>\r\n\r\n                        <Group justify=\"space-between\" mt=\"md\" mb=\"xs\">\r\n                          <Text fw={500} size=\"lg\">{service.title}</Text>\r\n                          <Badge color=\"green\" variant=\"light\">\r\n                            Professional\r\n                          </Badge>\r\n                        </Group>\r\n\r\n                        <Text size=\"sm\" c=\"dimmed\" mb=\"md\">\r\n                          {service.description}\r\n                        </Text>\r\n\r\n                        <List size=\"sm\" spacing=\"sm\" mb=\"xl\">\r\n                          {service.features.map((feature, i) => (\r\n                            <List.Item key={i}>{feature}</List.Item>\r\n                          ))}\r\n                        </List>\r\n\r\n                        <Button\r\n                          variant=\"light\"\r\n                          color=\"green\"\r\n                          fullWidth\r\n                          mt=\"auto\"\r\n                          component={Link}\r\n                          to={`/services/${service.slug}`}\r\n                          rightSection={<IconArrowRight size={16} />}\r\n                        >\r\n                          Learn More\r\n                        </Button>\r\n                      </Card>\r\n                    </MotionWrapper>\r\n                  </Grid.Col>\r\n                ))}\r\n              </Grid>\r\n            </Tabs.Panel>\r\n\r\n            <Tabs.Panel value=\"commercial\">\r\n              <Grid>\r\n                {commercialServices.map((service) => (\r\n                  <Grid.Col key={service.id} span={{ base: 12, sm: 6, lg: 4 }}>\r\n                    <MotionWrapper>\r\n                      <Card\r\n                        withBorder\r\n                        radius=\"md\"\r\n                        padding=\"lg\"\r\n                        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                      >\r\n                        <Card.Section>\r\n                          <img\r\n                            src={service.image}\r\n                            height={160}\r\n                            alt={service.title}\r\n                            style={{ objectFit: 'cover', width: '100%' }}\r\n                          />\r\n                        </Card.Section>\r\n\r\n                        <Group justify=\"space-between\" mt=\"md\" mb=\"xs\">\r\n                          <Text fw={500} size=\"lg\">{service.title}</Text>\r\n                          <Badge color=\"blue\" variant=\"light\">\r\n                            Commercial\r\n                          </Badge>\r\n                        </Group>\r\n\r\n                        <Text size=\"sm\" c=\"dimmed\" mb=\"md\">\r\n                          {service.description}\r\n                        </Text>\r\n\r\n                        <List size=\"sm\" spacing=\"sm\" mb=\"xl\">\r\n                          {service.features.map((feature, i) => (\r\n                            <List.Item key={i}>{feature}</List.Item>\r\n                          ))}\r\n                        </List>\r\n\r\n                        <Button\r\n                          variant=\"light\"\r\n                          color=\"blue\"\r\n                          fullWidth\r\n                          mt=\"auto\"\r\n                          component={Link}\r\n                          to={`/services/${service.slug}`}\r\n                          rightSection={<IconArrowRight size={16} />}\r\n                        >\r\n                          Learn More\r\n                        </Button>\r\n                      </Card>\r\n                    </MotionWrapper>\r\n                  </Grid.Col>\r\n                ))}\r\n              </Grid>\r\n            </Tabs.Panel>\r\n          </AnimatePresence>\r\n        </Tabs>\r\n\r\n        <Card withBorder radius=\"md\" padding=\"xl\" mt={50}>\r\n          <Stack gap=\"md\" align=\"center\" ta=\"center\">\r\n            <Title order={2}>Need Emergency Tree Service?</Title>\r\n            <Text size=\"lg\" c=\"dimmed\" maw={600}>\r\n              Available 24/7 for emergency tree removal and hazardous situation management.\r\n            </Text>\r\n            <Button\r\n              size=\"lg\"\r\n              color=\"red\"\r\n              leftSection={<IconPhone size={20} />}\r\n              component=\"a\"\r\n              href=\"tel:+441234567890\"\r\n            >\r\n              Call Now\r\n            </Button>\r\n          </Stack>\r\n        </Card>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Services;","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('arrow-right', 'IconArrowRight', [\n  ['path', { d: 'M5 12l14 0', key: 'svg-0' }],\n  ['path', { d: 'M13 18l6 -6', key: 'svg-1' }],\n  ['path', { d: 'M13 6l6 6', key: 'svg-2' }],\n]);\n","import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Badge.module.css';\n\nexport type BadgeStylesNames = 'root' | 'section' | 'label';\nexport type BadgeVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'dot'\n  | 'transparent'\n  | 'white'\n  | 'default'\n  | 'gradient';\n\nexport type BadgeCssVariables = {\n  root:\n    | '--badge-height'\n    | '--badge-padding-x'\n    | '--badge-fz'\n    | '--badge-radius'\n    | '--badge-bg'\n    | '--badge-color'\n    | '--badge-bd'\n    | '--badge-dot-color';\n};\n\nexport interface BadgeProps extends BoxProps, StylesApiProps<BadgeFactory> {\n  /** Controls `font-size`, `height` and horizontal `padding`, `'md'` by default */\n  size?: MantineSize | (string & {});\n\n  /** If set, badge `min-width` becomes equal to its `height` and horizontal padding is removed */\n  circle?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `'xl'` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Gradient configuration used when `variant=\"gradient\"`, default value is `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Content displayed on the left side of the badge label */\n  leftSection?: React.ReactNode;\n\n  /** Content displayed on the right side of the badge label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether Badge should take 100% of its parent width, `false` by default */\n  fullWidth?: boolean;\n\n  /** Main badge content */\n  children?: React.ReactNode;\n\n  /** Determines whether text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type BadgeFactory = PolymorphicFactory<{\n  props: BadgeProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: BadgeStylesNames;\n  vars: BadgeCssVariables;\n  variant: BadgeVariant;\n}>;\n\nconst defaultProps: Partial<BadgeProps> = {};\n\nconst varsResolver = createVarsResolver<BadgeFactory>(\n  (theme, { radius, color, gradient, variant, size, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--badge-height': getSize(size, 'badge-height'),\n        '--badge-padding-x': getSize(size, 'badge-padding-x'),\n        '--badge-fz': getSize(size, 'badge-fz'),\n        '--badge-radius': radius === undefined ? undefined : getRadius(radius),\n        '--badge-bg': color || variant ? colors.background : undefined,\n        '--badge-color': color || variant ? colors.color : undefined,\n        '--badge-bd': color || variant ? colors.border : undefined,\n        '--badge-dot-color': variant === 'dot' ? getThemeColor(color, theme) : undefined,\n      },\n    };\n  }\n);\n\nexport const Badge = polymorphicFactory<BadgeFactory>((_props, ref) => {\n  const props = useProps('Badge', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    autoContrast,\n    circle,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BadgeFactory>({\n    name: 'Badge',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      variant={variant}\n      mod={[\n        {\n          block: fullWidth,\n          circle,\n          'with-right-section': !!rightSection,\n          'with-left-section': !!leftSection,\n        },\n        mod,\n      ]}\n      {...getStyles('root', { variant })}\n      ref={ref}\n      {...others}\n    >\n      {leftSection && (\n        <span {...getStyles('section')} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      <span {...getStyles('label')}>{children}</span>\n      {rightSection && (\n        <span {...getStyles('section')} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nBadge.classes = classes;\nBadge.displayName = '@mantine/core/Badge';\n","import { createSafeContext, GetStylesApi } from '../../core';\nimport type { ListFactory } from './List';\n\ninterface ListContextValue {\n  getStyles: GetStylesApi<ListFactory>;\n  center: boolean | undefined;\n  icon: React.ReactNode | undefined;\n}\n\nexport const [ListProvider, useListContext] = createSafeContext<ListContextValue>(\n  'List component was not found in tree'\n);\n","import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useListContext } from '../List.context';\nimport classes from '../List.module.css';\n\nexport type ListItemStylesNames = 'item' | 'itemWrapper' | 'itemIcon' | 'itemLabel';\n\nexport interface ListItemProps\n  extends BoxProps,\n    CompoundStylesApiProps<ListItemFactory>,\n    ElementProps<'li'> {\n  /** Icon to replace item bullet */\n  icon?: React.ReactNode;\n\n  /** Item content */\n  children?: React.ReactNode;\n}\n\nexport type ListItemFactory = Factory<{\n  props: ListItemProps;\n  ref: HTMLLIElement;\n  stylesNames: ListItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ListItemProps> = {};\n\nexport const ListItem = factory<ListItemFactory>((_props, ref) => {\n  const props = useProps('ListItem', defaultProps, _props);\n  const { classNames, className, style, styles, vars, icon, children, mod, ...others } = props;\n\n  const ctx = useListContext();\n  const _icon = icon || ctx.icon;\n  const stylesApiProps = { classNames, styles };\n\n  return (\n    <Box\n      {...ctx.getStyles('item', { ...stylesApiProps, className, style })}\n      component=\"li\"\n      mod={[{ 'with-icon': !!_icon, centered: ctx.center }, mod]}\n      ref={ref}\n      {...others}\n    >\n      <div {...ctx.getStyles('itemWrapper', stylesApiProps)}>\n        {_icon && <span {...ctx.getStyles('itemIcon', stylesApiProps)}>{_icon}</span>}\n        <span {...ctx.getStyles('itemLabel', stylesApiProps)}>{children}</span>\n      </div>\n    </Box>\n  );\n});\n\nListItem.classes = classes;\nListItem.displayName = '@mantine/core/ListItem';\n","import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  getLineHeight,\n  getSpacing,\n  MantineSize,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ListProvider } from './List.context';\nimport { ListItem, ListItemStylesNames } from './ListItem/ListItem';\nimport classes from './List.module.css';\n\nexport type ListStylesNames = 'root' | ListItemStylesNames;\nexport type ListCssVariables = {\n  root: '--list-fz' | '--list-lh' | '--list-spacing';\n};\n\nexport interface ListProps\n  extends BoxProps,\n    StylesApiProps<ListFactory>,\n    ElementProps<'ul', 'type'> {\n  /** `List.Item` components only */\n  children?: React.ReactNode;\n\n  /** List type: `ol` or `ul`, `'unordered'` by default */\n  type?: 'ordered' | 'unordered';\n\n  /** Determines whether list items should be offset with padding, `false` by default */\n  withPadding?: boolean;\n\n  /** Controls `font-size` and `line-height`, `'md'` by default */\n  size?: MantineSize;\n\n  /** Icon that replaces list item dot */\n  icon?: React.ReactNode;\n\n  /** Key of `theme.spacing` or any valid CSS value to set spacing between items, `0` by default */\n  spacing?: MantineSpacing;\n\n  /** Determines whether items must be centered with their icon, `false` by default */\n  center?: boolean;\n\n  /** Controls `list-style-type`, by default inferred from `type` */\n  listStyleType?: React.CSSProperties['listStyleType'];\n}\n\nexport type ListFactory = Factory<{\n  props: ListProps;\n  ref: HTMLUListElement;\n  stylesNames: ListStylesNames;\n  vars: ListCssVariables;\n  staticComponents: {\n    Item: typeof ListItem;\n  };\n}>;\n\nconst defaultProps: Partial<ListProps> = {\n  type: 'unordered',\n};\n\nconst varsResolver = createVarsResolver<ListFactory>((_, { size, spacing }) => ({\n  root: {\n    '--list-fz': getFontSize(size),\n    '--list-lh': getLineHeight(size),\n    '--list-spacing': getSpacing(spacing),\n  },\n}));\n\nexport const List = factory<ListFactory>((_props, ref) => {\n  const props = useProps('List', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    type,\n    withPadding,\n    icon,\n    spacing,\n    center,\n    listStyleType,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ListFactory>({\n    name: 'List',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ListProvider value={{ center, icon, getStyles }}>\n      <Box<any>\n        {...getStyles('root', { style: { listStyleType } })}\n        component={type === 'unordered' ? ('ul' as const) : ('ol' as const)}\n        mod={[{ 'with-padding': withPadding }, mod]}\n        ref={ref}\n        {...others}\n      >\n        {children}\n      </Box>\n    </ListProvider>\n  );\n});\n\nList.classes = classes;\nList.displayName = '@mantine/core/List';\nList.Item = ListItem;\n","import type { MantineTheme } from '../../theme.types';\n\nexport function getAutoContrastValue(autoContrast: boolean | undefined, theme: MantineTheme) {\n  return typeof autoContrast === 'boolean' ? autoContrast : theme.autoContrast;\n}\n","/* eslint-disable no-empty */\nexport function findElementAncestor(element: HTMLElement, selector: string) {\n  let _element: HTMLElement | null = element;\n  while ((_element = _element.parentElement) && !_element.matches(selector)) {}\n  return _element;\n}\n","import { findElementAncestor } from '../find-element-ancestor/find-element-ancestor';\n\nfunction getPreviousIndex(current: number, elements: HTMLButtonElement[], loop: boolean) {\n  for (let i = current - 1; i >= 0; i -= 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = elements.length - 1; i > -1; i -= 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n\n  return current;\n}\n\nfunction getNextIndex(current: number, elements: HTMLButtonElement[], loop: boolean) {\n  for (let i = current + 1; i < elements.length; i += 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = 0; i < elements.length; i += 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n\n  return current;\n}\n\n/** Validates that target element is on the same level as sibling, used to filter out children that have the same sibling selector */\nfunction onSameLevel(\n  target: HTMLButtonElement,\n  sibling: HTMLButtonElement,\n  parentSelector: string\n) {\n  return (\n    findElementAncestor(target, parentSelector) === findElementAncestor(sibling, parentSelector)\n  );\n}\n\ninterface GetElementsSiblingsInput {\n  /** Selector used to find parent node, e.g. '[role=\"tablist\"]', '.mantine-Text-root' */\n  parentSelector: string;\n\n  /** Selector used to find element siblings, e.g. '[data-tab]' */\n  siblingSelector: string;\n\n  /** Determines whether next/previous indices should loop */\n  loop?: boolean;\n\n  /** Determines which arrow keys will be used */\n  orientation: 'vertical' | 'horizontal';\n\n  /** Text direction */\n  dir?: 'rtl' | 'ltr';\n\n  /** Determines whether element should be clicked when focused with keyboard event */\n  activateOnFocus?: boolean;\n\n  /** External keydown event */\n  onKeyDown?: (event: React.KeyboardEvent<HTMLButtonElement>) => void;\n}\n\nexport function createScopedKeydownHandler({\n  parentSelector,\n  siblingSelector,\n  onKeyDown,\n  loop = true,\n  activateOnFocus = false,\n  dir = 'rtl',\n  orientation,\n}: GetElementsSiblingsInput) {\n  return (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    onKeyDown?.(event);\n\n    const elements = Array.from(\n      findElementAncestor(event.currentTarget, parentSelector)?.querySelectorAll<HTMLButtonElement>(\n        siblingSelector\n      ) || []\n    ).filter((node) => onSameLevel(event.currentTarget, node, parentSelector));\n\n    const current = elements.findIndex((el) => event.currentTarget === el);\n    const _nextIndex = getNextIndex(current, elements, loop);\n    const _previousIndex = getPreviousIndex(current, elements, loop);\n    const nextIndex = dir === 'rtl' ? _previousIndex : _nextIndex;\n    const previousIndex = dir === 'rtl' ? _nextIndex : _previousIndex;\n\n    switch (event.key) {\n      case 'ArrowRight': {\n        if (orientation === 'horizontal') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[nextIndex].focus();\n          activateOnFocus && elements[nextIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowLeft': {\n        if (orientation === 'horizontal') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[previousIndex].focus();\n          activateOnFocus && elements[previousIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowUp': {\n        if (orientation === 'vertical') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[_previousIndex].focus();\n          activateOnFocus && elements[_previousIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowDown': {\n        if (orientation === 'vertical') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[_nextIndex].focus();\n          activateOnFocus && elements[_nextIndex].click();\n        }\n\n        break;\n      }\n\n      case 'Home': {\n        event.stopPropagation();\n        event.preventDefault();\n        !elements[0].disabled && elements[0].focus();\n        break;\n      }\n\n      case 'End': {\n        event.stopPropagation();\n        event.preventDefault();\n        const last = elements.length - 1;\n        !elements[last].disabled && elements[last].focus();\n        break;\n      }\n    }\n  };\n}\n","export function getSafeId(uid: string, errorMessage: string) {\n  return (value: string) => {\n    if (typeof value !== 'string' || value.trim().length === 0) {\n      throw new Error(errorMessage);\n    }\n\n    return `${uid}-${value}`;\n  };\n}\n","import { useState } from 'react';\n\ninterface UseUncontrolledInput<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?: (value: T, ...payload: any[]) => void;\n}\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledInput<T>): [T, (value: T, ...payload: any[]) => void, boolean] {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T, ...payload: any[]) => {\n    setUncontrolledValue(val);\n    onChange?.(val, ...payload);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"],"names":["TabsProvider","useTabsContext","createSafeContext","defaultProps","TabsList","factory","_props","ref","props","useProps","children","className","grow","justify","classNames","styles","style","mod","others","ctx","jsx","Box","getStyles","variant","role","orientation","placement","inverted","__vars","classes","displayName","TabsPanel","value","keepMounted","active","content","display","id","getPanelId","getTabId","TabsTab","rightSection","leftSection","onClick","onKeyDown","disabled","color","vars","tabIndex","theme","useMantineTheme","dir","useDirection","stylesApiProps","jsxs","UnstyledButton","unstyled","event","onChange","allowTabDeactivation","getThemeColor","createScopedKeydownHandler","siblingSelector","parentSelector","activateOnFocus","activateTabWithKeyboard","loop","VALUE_ERROR","varsResolver","createVarsResolver","_ref","radius","autoContrast","root","getRadius","getAutoContrastValue","getContrastColor","Tabs","defaultValue","uid","useId","currentTab","setCurrentTab","useUncontrolled","finalValue","useStyles","name","getSafeId","Tab","Panel","List","MotionWrapper","_jsx","motion","div","height","whileHover","translateY","transition","duration","Services","activeTab","setActiveTab","useState","services","title","slug","type","description","features","image","residentialServices","filter","service","commercialServices","Container","size","py","_jsxs","Stack","gap","Title","order","ta","mb","Text","c","maw","mx","AnimatePresence","mode","Grid","map","Col","span","base","sm","lg","Card","withBorder","padding","flexDirection","Section","src","alt","objectFit","width","Group","mt","fw","Badge","spacing","feature","i","Item","Button","fullWidth","component","Link","to","IconArrowRight","align","IconPhone","href","createReactComponent","d","key","gradient","colors","variantColorResolver","primaryColor","getSize","background","border","polymorphicFactory","circle","block","ListProvider","useListContext","ListItem","icon","_icon","centered","center","_","getFontSize","getLineHeight","getSpacing","withPadding","listStyleType","findElementAncestor","element","selector","_element","parentElement","matches","elements","Array","from","currentTarget","querySelectorAll","node","target","sibling","onSameLevel","current","findIndex","el","_nextIndex","length","getNextIndex","_previousIndex","getPreviousIndex","nextIndex","previousIndex","stopPropagation","preventDefault","focus","click","last","errorMessage","trim","Error","uncontrolledValue","setUncontrolledValue","val","_len","arguments","payload","_key"],"sourceRoot":""}