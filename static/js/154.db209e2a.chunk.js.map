{"version":3,"file":"static/js/154.db209e2a.chunk.js","mappings":"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","sources":["../node_modules/@tabler/icons-react/src/icons/IconTag.js","../node_modules/@tabler/icons-react/src/icons/IconZoomIn.js","pages/Gallery.tsx","../node_modules/@mantine/core/src/components/Image/Image.tsx","../node_modules/@mantine/core/src/components/SimpleGrid/SimpleGridVariables.tsx","../node_modules/@mantine/core/src/components/SimpleGrid/SimpleGrid.tsx"],"sourcesContent":["import createReactComponent from '../createReactComponent';\nexport default createReactComponent('tag', 'IconTag', [\n  ['path', { d: 'M7.5 7.5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0', key: 'svg-0' }],\n  [\n    'path',\n    {\n      d: 'M3 6v5.172a2 2 0 0 0 .586 1.414l7.71 7.71a2.41 2.41 0 0 0 3.408 0l5.592 -5.592a2.41 2.41 0 0 0 0 -3.408l-7.71 -7.71a2 2 0 0 0 -1.414 -.586h-5.172a3 3 0 0 0 -3 3z',\n      key: 'svg-1',\n    },\n  ],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('zoom-in', 'IconZoomIn', [\n  ['path', { d: 'M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0', key: 'svg-0' }],\n  ['path', { d: 'M7 10l6 0', key: 'svg-1' }],\n  ['path', { d: 'M10 7l0 6', key: 'svg-2' }],\n  ['path', { d: 'M21 21l-6 -6', key: 'svg-3' }],\n]);\n","import React, { useState } from 'react';\r\nimport { Container, Title, Image, Text, Group, Button, Stack, SimpleGrid, Overlay, Modal } from '@mantine/core';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { IconZoomIn, IconTag } from '@tabler/icons-react';\r\nimport { GalleryItem } from '../types';\r\n\r\nconst MotionDiv = motion.div;\r\n\r\nconst categories = [\r\n  'All',\r\n  'Tree Felling',\r\n  'Crown Reduction',\r\n  'Stump Removal',\r\n  'Emergency Work',\r\n  'Before & After'\r\n];\r\n\r\nconst Gallery: React.FC = () => {\r\n  const [selectedCategory, setSelectedCategory] = useState('All');\r\n  const [selectedImage, setSelectedImage] = useState<GalleryItem | null>(null);\r\n\r\n  const galleryItems: GalleryItem[] = [\r\n    {\r\n      id: 1,\r\n      imageUrl: '/assets/gallery/tree-felling-1.jpg',\r\n      description: 'Large oak tree removal in Aldershot',\r\n      category: 'Tree Felling',\r\n      location: 'Aldershot',\r\n      date: '2023-12-01'\r\n    },\r\n    {\r\n      id: 2,\r\n      imageUrl: '/assets/gallery/crown-1.jpg',\r\n      description: 'Crown reduction of mature beech tree',\r\n      category: 'Crown Reduction',\r\n      location: 'Farnborough',\r\n      date: '2023-11-15'\r\n    },\r\n    // Add more gallery items as needed\r\n  ];\r\n\r\n  const filteredItems = selectedCategory === 'All' \r\n    ? galleryItems \r\n    : galleryItems.filter(item => item.category === selectedCategory);\r\n\r\n  return (\r\n    <Container size=\"xl\" py={80}>\r\n      <Stack gap={40}>\r\n        <div>\r\n          <Title order={1} size=\"3rem\" ta=\"center\">Our Work Gallery</Title>\r\n          <Text c=\"dimmed\" size=\"xl\" ta=\"center\" mt=\"md\">\r\n            Browse through our portfolio of professional tree surgery projects\r\n          </Text>\r\n        </div>\r\n\r\n        <Group justify=\"center\" gap=\"xs\">\r\n          {categories.map((category) => (\r\n            <Button\r\n              key={category}\r\n              variant={selectedCategory === category ? 'filled' : 'light'}\r\n              color={selectedCategory === category ? 'green' : 'gray'}\r\n              onClick={() => setSelectedCategory(category)}\r\n              leftSection={<IconTag size={16} />}\r\n              radius=\"xl\"\r\n              size=\"md\"\r\n            >\r\n              {category}\r\n            </Button>\r\n          ))}\r\n        </Group>\r\n\r\n        <AnimatePresence mode=\"wait\">\r\n          <SimpleGrid\r\n            key={selectedCategory}\r\n            cols={{ base: 1, sm: 2, md: 3 }}\r\n            spacing=\"lg\"\r\n          >\r\n            {filteredItems.map((item, index) => (\r\n              <MotionDiv\r\n                key={item.id}\r\n                style={{\r\n                  padding: '16px',\r\n                  border: '1px solid #eee',\r\n                  borderRadius: '8px',\r\n                  backgroundColor: 'white',\r\n                  cursor: 'pointer'\r\n                }}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: 20 }}\r\n                transition={{ duration: 0.3, delay: index * 0.1 }}\r\n                onClick={() => setSelectedImage(item)}\r\n              >\r\n                <div style={{ position: 'relative' }}>\r\n                  <Image\r\n                    src={item.imageUrl}\r\n                    height={280}\r\n                    alt={item.description}\r\n                  />\r\n                  <Overlay\r\n                    opacity={0}\r\n                    style={{ \r\n                      color: '#000',\r\n                      zIndex: 1,\r\n                      '&:hover': {\r\n                        opacity: 0.7,\r\n                        transition: 'opacity 200ms ease'\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Group justify=\"center\" style={{ height: '100%' }}>\r\n                      <IconZoomIn size={32} color=\"white\" />\r\n                    </Group>\r\n                  </Overlay>\r\n                </div>\r\n\r\n                <Stack mt=\"md\" gap={8}>\r\n                  <Text fw={500}>{item.description}</Text>\r\n                  <Group justify=\"space-between\" align=\"center\">\r\n                    <Text size=\"sm\" c=\"dimmed\">{item.category}</Text>\r\n                    <Text size=\"sm\" c=\"dimmed\">{item.date}</Text>\r\n                  </Group>\r\n                </Stack>\r\n              </MotionDiv>\r\n            ))}\r\n          </SimpleGrid>\r\n        </AnimatePresence>\r\n\r\n        {selectedImage && (\r\n          <Modal\r\n            opened={!!selectedImage}\r\n            onClose={() => setSelectedImage(null)}\r\n            size=\"xl\"\r\n            padding={0}\r\n            centered\r\n          >\r\n            <div style={{ position: 'relative' }}>\r\n              <Image\r\n                src={selectedImage.imageUrl}\r\n                alt={selectedImage.description}\r\n                fit=\"contain\"\r\n                style={{ maxHeight: '80vh' }}\r\n              />\r\n              <Stack gap={8} mt=\"md\" style={{ padding: '20px', color: 'white' }}>\r\n                <Group justify=\"space-between\">\r\n                  <Text fw={500}>{selectedImage.description}</Text>\r\n                  <Text size=\"sm\">{selectedImage.date}</Text>\r\n                </Group>\r\n                <Text c=\"dimmed\" size=\"sm\">{selectedImage.category}</Text>\r\n              </Stack>\r\n            </div>\r\n          </Modal>\r\n        )}\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Image.module.css';\n\nexport type ImageStylesNames = 'root';\nexport type ImageCssVariables = {\n  root: '--image-radius' | '--image-object-fit';\n};\n\nexport interface ImageProps extends BoxProps, StylesApiProps<ImageFactory> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `0` by default */\n  radius?: MantineRadius;\n\n  /** Controls `object-fit` style, `'cover'` by default */\n  fit?: React.CSSProperties['objectFit'];\n\n  /** Image url that will be used as a fallback in case `src` prop is not set or image cannot be loaded */\n  fallbackSrc?: string;\n\n  /** Image url */\n  src?: any;\n\n  /** Called when image fails to load */\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n}\n\nexport type ImageFactory = PolymorphicFactory<{\n  props: ImageProps;\n  defaultRef: HTMLImageElement;\n  defaultComponent: 'img';\n  stylesNames: ImageStylesNames;\n  vars: ImageCssVariables;\n}>;\n\nconst defaultProps: Partial<ImageProps> = {};\n\nconst varsResolver = createVarsResolver<ImageFactory>((_, { radius, fit }) => ({\n  root: {\n    '--image-radius': radius === undefined ? undefined : getRadius(radius),\n    '--image-object-fit': fit,\n  },\n}));\n\nexport const Image = polymorphicFactory<ImageFactory>((_props, ref) => {\n  const props = useProps('Image', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n\n  const [error, setError] = useState(!src);\n\n  useEffect(() => setError(!src), [src]);\n\n  const getStyles = useStyles<ImageFactory>({\n    name: 'Image',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (error && fallbackSrc) {\n    return (\n      <Box\n        component=\"img\"\n        ref={ref}\n        src={fallbackSrc}\n        {...getStyles('root')}\n        onError={onError}\n        mod={['fallback', mod]}\n        {...others}\n      />\n    );\n  }\n\n  return (\n    <Box\n      component=\"img\"\n      ref={ref}\n      {...getStyles('root')}\n      src={src}\n      onError={(event) => {\n        onError?.(event);\n        setError(true);\n      }}\n      mod={mod}\n      {...others}\n    />\n  );\n});\n\nImage.classes = classes;\nImage.displayName = '@mantine/core/Image';\n","import {\n  filterProps,\n  getBaseValue,\n  getSortedBreakpoints,\n  getSpacing,\n  InlineStyles,\n  keys,\n  MantineBreakpoint,\n  px,\n  useMantineTheme,\n} from '../../core';\nimport type { SimpleGridProps } from './SimpleGrid';\n\ninterface SimpleGridVariablesProps extends SimpleGridProps {\n  selector: string;\n}\n\nexport function SimpleGridMediaVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector,\n}: SimpleGridVariablesProps) {\n  const theme = useMantineTheme();\n  const _verticalSpacing = verticalSpacing === undefined ? spacing : verticalSpacing;\n\n  const baseStyles: Record<string, string | undefined> = filterProps({\n    '--sg-spacing-x': getSpacing(getBaseValue(spacing)),\n    '--sg-spacing-y': getSpacing(getBaseValue(_verticalSpacing)),\n    '--sg-cols': getBaseValue(cols)?.toString(),\n  });\n\n  const queries = keys(theme.breakpoints).reduce<Record<string, Record<string, any>>>(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n\n      if (typeof spacing === 'object' && spacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-x'] = getSpacing(spacing[breakpoint]);\n      }\n\n      if (typeof _verticalSpacing === 'object' && _verticalSpacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-y'] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n\n      if (typeof cols === 'object' && cols[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-cols'] = cols[breakpoint];\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme.breakpoints).filter(\n    (breakpoint) => keys(queries[breakpoint.value]).length > 0\n  );\n\n  const media = sortedBreakpoints.map((breakpoint) => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value as MantineBreakpoint]})`,\n    styles: queries[breakpoint.value],\n  }));\n\n  return <InlineStyles styles={baseStyles} media={media} selector={selector} />;\n}\n\nfunction getBreakpoints(values: unknown) {\n  if (typeof values === 'object' && values !== null) {\n    return keys(values);\n  }\n\n  return [];\n}\n\nfunction sortBreakpoints(breakpoints: string[]) {\n  return breakpoints.sort((a, b) => (px(a) as number) - (px(b) as number));\n}\n\nfunction getUniqueBreakpoints({\n  spacing,\n  verticalSpacing,\n  cols,\n}: Omit<SimpleGridVariablesProps, 'selector'>) {\n  const breakpoints = Array.from(\n    new Set([\n      ...getBreakpoints(spacing),\n      ...getBreakpoints(verticalSpacing),\n      ...getBreakpoints(cols),\n    ])\n  );\n\n  return sortBreakpoints(breakpoints);\n}\n\nexport function SimpleGridContainerVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector,\n}: SimpleGridVariablesProps) {\n  const _verticalSpacing = verticalSpacing === undefined ? spacing : verticalSpacing;\n\n  const baseStyles: Record<string, string | undefined> = filterProps({\n    '--sg-spacing-x': getSpacing(getBaseValue(spacing)),\n    '--sg-spacing-y': getSpacing(getBaseValue(_verticalSpacing)),\n    '--sg-cols': getBaseValue(cols)?.toString(),\n  });\n\n  const uniqueBreakpoints = getUniqueBreakpoints({ spacing, verticalSpacing, cols });\n\n  const queries = uniqueBreakpoints.reduce<Record<string, Record<string, any>>>(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n\n      if (typeof spacing === 'object' && spacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-x'] = getSpacing(spacing[breakpoint]);\n      }\n\n      if (typeof _verticalSpacing === 'object' && _verticalSpacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-y'] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n\n      if (typeof cols === 'object' && cols[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-cols'] = cols[breakpoint];\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const media = uniqueBreakpoints.map((breakpoint) => ({\n    query: `simple-grid (min-width: ${breakpoint})`,\n    styles: queries[breakpoint],\n  }));\n\n  return <InlineStyles styles={baseStyles} container={media} selector={selector} />;\n}\n","import {\n  Box,\n  BoxProps,\n  ElementProps,\n  Factory,\n  factory,\n  MantineSpacing,\n  StyleProp,\n  StylesApiProps,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables';\nimport classes from './SimpleGrid.module.css';\n\nexport type SimpleGridStylesNames = 'root' | 'container';\n\nexport interface SimpleGridProps\n  extends BoxProps,\n    StylesApiProps<SimpleGridFactory>,\n    ElementProps<'div'> {\n  /** Number of columns, `1` by default */\n  cols?: StyleProp<number>;\n\n  /** Spacing between columns, `'md'` by default */\n  spacing?: StyleProp<MantineSpacing>;\n\n  /** Spacing between rows, `'md'` by default */\n  verticalSpacing?: StyleProp<MantineSpacing>;\n\n  /** Determines typeof of queries that are used for responsive styles, `'media'` by default */\n  type?: 'media' | 'container';\n}\n\nexport type SimpleGridFactory = Factory<{\n  props: SimpleGridProps;\n  ref: HTMLDivElement;\n  stylesNames: SimpleGridStylesNames;\n}>;\n\nconst defaultProps: Partial<SimpleGridProps> = {\n  cols: 1,\n  spacing: 'md',\n  type: 'media',\n};\n\nexport const SimpleGrid = factory<SimpleGridFactory>((_props, ref) => {\n  const props = useProps('SimpleGrid', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SimpleGridFactory>({\n    name: 'SimpleGrid',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n  });\n\n  const responsiveClassName = useRandomClassName();\n\n  if (type === 'container') {\n    return (\n      <>\n        <SimpleGridContainerVariables {...props} selector={`.${responsiveClassName}`} />\n        <div {...getStyles('container')}>\n          <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SimpleGridMediaVariables {...props} selector={`.${responsiveClassName}`} />\n      <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n    </>\n  );\n});\n\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n"],"names":["IconTag","createReactComponent","d","key","IconZoomIn","MotionDiv","motion","div","categories","Gallery","selectedCategory","setSelectedCategory","useState","selectedImage","setSelectedImage","galleryItems","id","imageUrl","description","category","location","date","filteredItems","filter","item","_jsx","Container","size","py","children","_jsxs","Stack","gap","Title","order","ta","Text","c","mt","Group","justify","map","Button","variant","color","onClick","leftSection","radius","AnimatePresence","mode","SimpleGrid","cols","base","sm","md","spacing","index","style","padding","border","borderRadius","backgroundColor","cursor","initial","opacity","y","animate","exit","transition","duration","delay","position","Image","src","height","alt","Overlay","zIndex","fw","align","Modal","opened","onClose","centered","fit","maxHeight","defaultProps","varsResolver","createVarsResolver","_","_ref","root","getRadius","polymorphicFactory","_props","ref","props","useProps","classNames","className","styles","unstyled","vars","onError","fallbackSrc","mod","others","error","setError","useEffect","getStyles","useStyles","name","classes","jsx","Box","component","event","displayName","SimpleGridMediaVariables","verticalSpacing","selector","theme","useMantineTheme","_verticalSpacing","baseStyles","filterProps","getSpacing","getBaseValue","toString","queries","keys","breakpoints","reduce","acc","breakpoint","media","getSortedBreakpoints","value","length","query","InlineStyles","getBreakpoints","values","getUniqueBreakpoints","_ref2","sort","a","b","px","sortBreakpoints","Array","from","Set","SimpleGridContainerVariables","_ref3","uniqueBreakpoints","container","type","factory","responsiveClassName","useRandomClassName","jsxs","Fragment"],"sourceRoot":""}