{"version":3,"file":"static/js/331.006d5962.chunk.js","mappings":"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","sources":["components/Map/InteractiveMap.tsx","pages/Contact.tsx","services/api.ts"],"sourcesContent":["import React from 'react';\r\nimport { MapContainer, TileLayer, Circle, Popup, Marker } from 'react-leaflet';\r\nimport { Card, Text, Badge, Group, Stack, Title } from '@mantine/core';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix for default marker icons in React + Leaflet\r\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst customIcon = new L.Icon({\r\n  iconUrl: '/assets/map/tree-marker.png',\r\n  iconSize: [32, 32],\r\n  iconAnchor: [16, 32],\r\n  popupAnchor: [0, -32],\r\n});\r\n\r\nconst InteractiveMap: React.FC = () => {\r\n  const mainLocation = [51.2478, -0.7783]; // Aldershot coordinates\r\n  const serviceAreas = [\r\n    {\r\n      id: 1,\r\n      name: 'Aldershot',\r\n      coordinates: [51.2478, -0.7783],\r\n      radius: 5000,\r\n      color: '#43A047',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Farnborough',\r\n      coordinates: [51.2867, -0.7526],\r\n      radius: 4000,\r\n      color: '#66BB6A',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Fleet',\r\n      coordinates: [51.2833, -0.8417],\r\n      radius: 4000,\r\n      color: '#81C784',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Farnham',\r\n      coordinates: [51.2149, -0.7987],\r\n      radius: 4000,\r\n      color: '#A5D6A7',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Card withBorder radius=\"md\" padding={0}>\r\n      <div style={{ height: '500px', position: 'relative' }}>\r\n        <MapContainer\r\n          center={mainLocation as L.LatLngExpression}\r\n          zoom={12}\r\n          style={{ height: '100%', width: '100%', zIndex: 1 }}\r\n          scrollWheelZoom={false}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n\r\n          {/* Main Location Marker */}\r\n          <Marker position={mainLocation as L.LatLngExpression} icon={customIcon}>\r\n            <Popup>\r\n              <Stack gap=\"xs\">\r\n                <Title order={6}>JS Tree Services</Title>\r\n                <Text size=\"sm\">123 Tree Street, Aldershot</Text>\r\n                <Badge color=\"green\">Main Office</Badge>\r\n              </Stack>\r\n            </Popup>\r\n          </Marker>\r\n\r\n          {/* Service Area Circles */}\r\n          {serviceAreas.map((area) => (\r\n            <Circle\r\n              key={area.id}\r\n              center={area.coordinates as L.LatLngExpression}\r\n              radius={area.radius}\r\n              pathOptions={{\r\n                fillColor: area.color,\r\n                fillOpacity: 0.2,\r\n                color: area.color,\r\n                weight: 1,\r\n              }}\r\n            >\r\n              <Popup>\r\n                <Stack gap=\"xs\">\r\n                  <Text fw={500}>{area.name}</Text>\r\n                  <Text size=\"sm\">Service coverage area</Text>\r\n                  <Text size=\"xs\" c=\"dimmed\">\r\n                    Radius: {(area.radius / 1000).toFixed(1)}km\r\n                  </Text>\r\n                </Stack>\r\n              </Popup>\r\n            </Circle>\r\n          ))}\r\n        </MapContainer>\r\n\r\n        {/* Legend */}\r\n        <Card\r\n          withBorder\r\n          padding=\"xs\"\r\n          radius=\"md\"\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: '20px',\r\n            right: '20px',\r\n            zIndex: 1000,\r\n            backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n          }}\r\n        >\r\n          <Stack gap=\"xs\">\r\n            <Text fw={500} size=\"sm\">Service Areas</Text>\r\n            {serviceAreas.map((area) => (\r\n              <Group key={area.id} gap=\"xs\">\r\n                <div\r\n                  style={{\r\n                    width: 12,\r\n                    height: 12,\r\n                    borderRadius: '50%',\r\n                    backgroundColor: area.color,\r\n                  }}\r\n                />\r\n                <Text size=\"xs\">{area.name}</Text>\r\n              </Group>\r\n            ))}\r\n          </Stack>\r\n        </Card>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default InteractiveMap;","import React, { useState } from 'react';\r\nimport { Container, Title, Text, Grid, Card, TextInput, Textarea, Button, Group, Stack, ThemeIcon, SimpleGrid, LoadingOverlay } from '@mantine/core';\r\nimport { useForm } from '@mantine/form';\r\nimport { IconPhone, IconMail, IconMapPin, IconClock, IconBrandWhatsapp, IconSend, IconCheck } from '@tabler/icons-react';\r\nimport { motion } from 'framer-motion';\r\nimport { notifications } from '@mantine/notifications';\r\nimport InteractiveMap from '../components/Map/InteractiveMap';\r\nimport { submitContactForm } from '../services/api';\r\nconst MotionDiv = motion.div;\r\n\r\nconst Contact: React.FC = () => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const form = useForm({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      service: '',\r\n      message: '',\r\n    },\r\n    validate: {\r\n      name: (value) => value.trim().length < 2 ? 'Name must be at least 2 characters' : null,\r\n      email: (value) => !/^\\S+@\\S+$/.test(value) ? 'Invalid email address' : null,\r\n      phone: (value) => !/^[\\d\\s+()-]{10,}$/.test(value) ? 'Invalid phone number' : null,\r\n      message: (value) => value.trim().length < 10 ? 'Message must be at least 10 characters' : null,\r\n    },\r\n  });\r\n\r\n  const contactInfo = [\r\n    {\r\n      icon: IconPhone,\r\n      title: 'Phone',\r\n      content: '+44 1234 567890',\r\n      link: 'tel:+441234567890',\r\n    },\r\n    {\r\n      icon: IconMail,\r\n      title: 'Email',\r\n      content: 'info@jstreeservices.com',\r\n      link: 'mailto:info@jstreeservices.com',\r\n    },\r\n    {\r\n      icon: IconMapPin,\r\n      title: 'Address',\r\n      content: '123 Tree Street, Aldershot, Hampshire, GU11 1AA',\r\n      link: 'https://maps.google.com/?q=123+Tree+Street+Aldershot+Hampshire',\r\n    },\r\n    {\r\n      icon: IconClock,\r\n      title: 'Hours',\r\n      content: 'Mon-Fri: 8am-6pm\\nSat: 9am-4pm\\nEmergency: 24/7',\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = async (values: typeof form.values) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      await submitContactForm(values);\r\n      notifications.show({\r\n        title: 'Success!',\r\n        message: 'Thank you for your enquiry. We will contact you shortly.',\r\n        color: 'green',\r\n        icon: <IconCheck size={16} />,\r\n      });\r\n      form.reset();\r\n    } catch (error) {\r\n      notifications.show({\r\n        title: 'Error',\r\n        message: 'Something went wrong. Please try again or call us directly.',\r\n        color: 'red',\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container size=\"xl\" py={80}>\r\n      <Stack gap={60}>\r\n        <div>\r\n          <Title order={1} size=\"3rem\" ta=\"center\">Contact Us</Title>\r\n          <Text c=\"dimmed\" size=\"xl\" ta=\"center\" mt=\"md\" maw={800} mx=\"auto\">\r\n            Get in touch with our expert team for a free quote or emergency service. \r\n            We're here to help with all your tree care needs.\r\n          </Text>\r\n        </div>\r\n\r\n        <SimpleGrid cols={{ base: 1, sm: 2, md: 4 }} spacing=\"xl\">\r\n          {contactInfo.map((info, index) => (\r\n            <MotionDiv\r\n              key={index}\r\n              style={{\r\n                padding: '24px',\r\n                border: '1px solid #eee',\r\n                borderRadius: '8px',\r\n                backgroundColor: '#f8f9fa',\r\n                cursor: info.link ? 'pointer' : 'default',\r\n                textDecoration: 'none',\r\n                color: 'inherit'\r\n              }}\r\n              onClick={() => info.link && window.open(info.link, '_blank')}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3, delay: index * 0.1 }}\r\n              whileHover={info.link ? { backgroundColor: '#f1f3f5' } : undefined}\r\n            >\r\n              <ThemeIcon size={50} radius=\"md\" color=\"green\" variant=\"light\">\r\n                <info.icon size={26} />\r\n              </ThemeIcon>\r\n              <Text size=\"lg\" fw={500} mt=\"md\">{info.title}</Text>\r\n              <Text size=\"sm\" c=\"dimmed\" mt=\"sm\" style={{ whiteSpace: 'pre-line' }}>\r\n                {info.content}\r\n              </Text>\r\n            </MotionDiv>\r\n          ))}\r\n        </SimpleGrid>\r\n\r\n        <Grid>\r\n          <Grid.Col span={{ base: 12, md: 6 }}>\r\n            <Card withBorder p=\"xl\" radius=\"md\" pos=\"relative\">\r\n              <LoadingOverlay visible={isSubmitting} />\r\n              <Title order={2} size=\"h2\" mb=\"xl\">Send Us a Message</Title>\r\n              <form onSubmit={form.onSubmit(handleSubmit)}>\r\n                <Stack gap=\"md\">\r\n                  <TextInput\r\n                    required\r\n                    label=\"Name\"\r\n                    placeholder=\"Your full name\"\r\n                    {...form.getInputProps('name')}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <TextInput\r\n                    required\r\n                    label=\"Email\"\r\n                    placeholder=\"your@email.com\"\r\n                    {...form.getInputProps('email')}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <TextInput\r\n                    required\r\n                    label=\"Phone\"\r\n                    placeholder=\"+44 1234 567890\"\r\n                    {...form.getInputProps('phone')}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <TextInput\r\n                    label=\"Service Required\"\r\n                    placeholder=\"e.g., Tree Felling, Crown Reduction\"\r\n                    {...form.getInputProps('service')}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <Textarea\r\n                    required\r\n                    label=\"Message\"\r\n                    placeholder=\"Please describe your requirements\"\r\n                    minRows={4}\r\n                    {...form.getInputProps('message')}\r\n                    disabled={isSubmitting}\r\n                  />\r\n                  <Group justify=\"flex-end\" mt=\"md\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      size=\"lg\"\r\n                      color=\"green\"\r\n                      leftSection={<IconSend size={20} />}\r\n                      loading={isSubmitting}\r\n                    >\r\n                      {isSubmitting ? 'Sending...' : 'Send Message'}\r\n                    </Button>\r\n                  </Group>\r\n                </Stack>\r\n              </form>\r\n            </Card>\r\n          </Grid.Col>\r\n\r\n          <Grid.Col span={{ base: 12, md: 6 }}>\r\n            <Stack gap=\"xl\">\r\n              <Card withBorder padding=\"xl\" radius=\"md\">\r\n                <Title order={2} size=\"h2\" mb=\"md\">Emergency Service</Title>\r\n                <Text mb=\"xl\">\r\n                  Need urgent tree care? Our emergency team is available 24/7 for immediate assistance.\r\n                </Text>\r\n                <Group>\r\n                  <Button\r\n                    component=\"a\"\r\n                    href=\"tel:+441234567890\"\r\n                    size=\"lg\"\r\n                    color=\"red\"\r\n                    leftSection={<IconPhone size={20} />}\r\n                  >\r\n                    Emergency Hotline\r\n                  </Button>\r\n                  <Button\r\n                    component=\"a\"\r\n                    href=\"https://wa.me/441234567890\"\r\n                    size=\"lg\"\r\n                    variant=\"light\"\r\n                    color=\"green\"\r\n                    leftSection={<IconBrandWhatsapp size={20} />}\r\n                  >\r\n                    WhatsApp\r\n                  </Button>\r\n                </Group>\r\n              </Card>\r\n\r\n              <Card withBorder padding=\"xl\" radius=\"md\">\r\n                <Title order={2} size=\"h2\" mb=\"xl\">Service Area</Title>\r\n                <div style={{ height: 300 }}>\r\n                  <InteractiveMap />\r\n                </div>\r\n              </Card>\r\n            </Stack>\r\n          </Grid.Col>\r\n        </Grid>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:1337'; // Update with your Strapi API URL\r\n\r\nexport const fetchBlogPosts = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/blog-posts`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching blog posts:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const fetchGalleryItems = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/gallery-items`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching gallery items:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const fetchServiceDetails = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/services`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching service details:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\ninterface ContactFormData {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  service?: string;\r\n  message: string;\r\n}\r\n\r\nexport const submitContactForm = async (data: ContactFormData) => {\r\n  // In a real application, this would send to your backend\r\n  // For now, we'll simulate an API call\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({ success: true, message: 'Thank you for your enquiry. We will contact you shortly.' });\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nexport const subscribeToNewsletter = async (email: string) => {\r\n  // Simulate newsletter subscription\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({ success: true, message: 'Successfully subscribed to newsletter!' });\r\n    }, 1000);\r\n  });\r\n};"],"names":["L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","customIcon","iconSize","iconAnchor","popupAnchor","InteractiveMap","mainLocation","serviceAreas","id","name","coordinates","radius","color","_jsx","Card","withBorder","padding","children","_jsxs","style","height","position","MapContainer","center","zoom","width","zIndex","scrollWheelZoom","TileLayer","attribution","url","Marker","icon","Popup","Stack","gap","Title","order","Text","size","Badge","map","area","Circle","pathOptions","fillColor","fillOpacity","weight","fw","c","toFixed","bottom","right","backgroundColor","Group","borderRadius","MotionDiv","motion","div","Contact","isSubmitting","setIsSubmitting","useState","form","useForm","initialValues","email","phone","service","message","validate","value","trim","length","test","contactInfo","IconPhone","title","content","link","IconMail","IconMapPin","IconClock","Container","py","ta","mt","maw","mx","SimpleGrid","cols","base","sm","md","spacing","info","index","border","cursor","textDecoration","onClick","window","open","initial","opacity","y","animate","transition","duration","delay","whileHover","undefined","ThemeIcon","variant","whiteSpace","Grid","Col","span","p","pos","LoadingOverlay","visible","mb","onSubmit","async","Promise","resolve","setTimeout","success","submitContactForm","notifications","show","IconCheck","reset","error","TextInput","required","label","placeholder","getInputProps","disabled","Textarea","minRows","justify","Button","type","leftSection","IconSend","loading","component","href","IconBrandWhatsapp"],"sourceRoot":""}