{"version":3,"file":"static/js/709.70cbef36.chunk.js","mappings":"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","sources":["../node_modules/@mantine/core/src/components/Accordion/Accordion.context.ts","../node_modules/@mantine/core/src/components/Accordion/AccordionChevron.tsx","../node_modules/@mantine/core/src/components/Accordion/AccordionItem.context.ts","../node_modules/@mantine/core/src/components/Accordion/AccordionControl/AccordionControl.tsx","../node_modules/@mantine/core/src/components/Accordion/AccordionItem/AccordionItem.tsx","../node_modules/@mantine/core/src/core/Box/get-style-object/get-style-object.ts","../node_modules/@mantine/core/src/components/Collapse/use-collapse.ts","../node_modules/@mantine/core/src/components/Collapse/Collapse.tsx","../node_modules/@mantine/core/src/components/Accordion/AccordionPanel/AccordionPanel.tsx","../node_modules/@mantine/core/src/components/Accordion/Accordion.tsx","pages/FAQ.tsx","../node_modules/@mantine/core/src/core/utils/find-element-ancestor/find-element-ancestor.ts","../node_modules/@mantine/core/src/core/utils/create-scoped-keydown-handler/create-scoped-keydown-handler.ts","../node_modules/@mantine/core/src/core/utils/get-safe-id/get-safe-id.ts","../node_modules/@mantine/hooks/src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import { createSafeContext, GetStylesApi } from '../../core';\nimport type { AccordionFactory } from './Accordion';\nimport { AccordionChevronPosition, AccordionHeadingOrder } from './Accordion.types';\n\ninterface AccordionContext {\n  loop: boolean | undefined;\n  transitionDuration: number | undefined;\n  disableChevronRotation: boolean | undefined;\n  chevronPosition: AccordionChevronPosition | undefined;\n  order: AccordionHeadingOrder | undefined;\n  chevron: React.ReactNode;\n  onChange: (value: string) => void;\n  isItemActive: (value: string) => boolean;\n  getControlId: (value: string) => string;\n  getRegionId: (value: string) => string;\n  getStyles: GetStylesApi<AccordionFactory>;\n  variant: string | undefined;\n  unstyled: boolean | undefined;\n}\n\nexport const [AccordionProvider, useAccordionContext] = createSafeContext<AccordionContext>(\n  'Accordion component was not found in the tree'\n);\n","import { rem } from '../../core';\n\nexport interface AccordionChevronProps extends React.ComponentPropsWithoutRef<'svg'> {\n  /** Controls `width` and `height` of the icon, `16` by default */\n  size?: number | string;\n}\n\nexport function AccordionChevron({ style, size = 16, ...others }: AccordionChevronProps) {\n  return (\n    <svg\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ ...style, width: rem(size), height: rem(size), display: 'block' }}\n      {...others}\n    >\n      <path\n        d=\"M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nAccordionChevron.displayName = '@mantine/core/AccordionChevron';\n","import { createSafeContext } from '../../core';\n\ninterface AccordionItemContext {\n  value: string;\n}\n\nexport const [AccordionItemProvider, useAccordionItemContext] =\n  createSafeContext<AccordionItemContext>('Accordion.Item component was not found in the tree');\n","import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  createScopedKeydownHandler,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useAccordionContext } from '../Accordion.context';\nimport { useAccordionItemContext } from '../AccordionItem.context';\nimport classes from '../Accordion.module.css';\n\nexport type AccordionControlStylesNames = 'control' | 'chevron' | 'label' | 'itemTitle' | 'icon';\n\nexport interface AccordionControlProps\n  extends BoxProps,\n    CompoundStylesApiProps<AccordionControlFactory>,\n    ElementProps<'button'> {\n  /** Disables control button */\n  disabled?: boolean;\n\n  /** Custom chevron icon */\n  chevron?: React.ReactNode;\n\n  /** Control label */\n  children?: React.ReactNode;\n\n  /** Icon displayed next to the label */\n  icon?: React.ReactNode;\n}\n\nexport type AccordionControlFactory = Factory<{\n  props: AccordionControlProps;\n  ref: HTMLButtonElement;\n  stylesNames: AccordionControlStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AccordionControlProps> = {};\n\nexport const AccordionControl = factory<AccordionControlFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    chevron,\n    icon,\n    onClick,\n    onKeyDown,\n    children,\n    disabled,\n    mod,\n    ...others\n  } = useProps('AccordionControl', defaultProps, props);\n\n  const { value } = useAccordionItemContext();\n  const ctx = useAccordionContext();\n  const isActive = ctx.isItemActive(value);\n  const shouldWrapWithHeading = typeof ctx.order === 'number';\n  const Heading = `h${ctx.order!}` as const;\n\n  const content = (\n    <UnstyledButton<'button'>\n      {...others}\n      {...ctx.getStyles('control', { className, classNames, style, styles, variant: ctx.variant })}\n      unstyled={ctx.unstyled}\n      mod={[\n        'accordion-control',\n        { active: isActive, 'chevron-position': ctx.chevronPosition, disabled },\n        mod,\n      ]}\n      ref={ref}\n      onClick={(event) => {\n        onClick?.(event);\n        ctx.onChange(value);\n      }}\n      type=\"button\"\n      disabled={disabled}\n      aria-expanded={isActive}\n      aria-controls={ctx.getRegionId(value)}\n      id={ctx.getControlId(value)}\n      onKeyDown={createScopedKeydownHandler({\n        siblingSelector: '[data-accordion-control]',\n        parentSelector: '[data-accordion]',\n        activateOnFocus: false,\n        loop: ctx.loop,\n        orientation: 'vertical',\n        onKeyDown,\n      })}\n    >\n      <Box\n        component=\"span\"\n        mod={{ rotate: !ctx.disableChevronRotation && isActive, position: ctx.chevronPosition }}\n        {...ctx.getStyles('chevron', { classNames, styles })}\n      >\n        {chevron || ctx.chevron}\n      </Box>\n      <span {...ctx.getStyles('label', { classNames, styles })}>{children}</span>\n      {icon && (\n        <Box\n          component=\"span\"\n          mod={{ 'chevron-position': ctx.chevronPosition }}\n          {...ctx.getStyles('icon', { classNames, styles })}\n        >\n          {icon}\n        </Box>\n      )}\n    </UnstyledButton>\n  );\n\n  return shouldWrapWithHeading ? (\n    <Heading {...ctx.getStyles('itemTitle', { classNames, styles })}>{content}</Heading>\n  ) : (\n    content\n  );\n});\n\nAccordionControl.displayName = '@mantine/core/AccordionControl';\nAccordionControl.classes = classes;\n","import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useAccordionContext } from '../Accordion.context';\nimport { AccordionItemProvider } from '../AccordionItem.context';\nimport classes from '../Accordion.module.css';\n\nexport type AccordionItemStylesNames = 'item';\n\nexport interface AccordionItemProps\n  extends BoxProps,\n    CompoundStylesApiProps<AccordionItemFactory>,\n    ElementProps<'div'> {\n  /** Value that is used to manage accordion state */\n  value: string;\n}\n\nexport type AccordionItemFactory = Factory<{\n  props: AccordionItemProps;\n  ref: HTMLDivElement;\n  stylesNames: AccordionItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AccordionItemProps> = {};\n\nexport const AccordionItem = factory<AccordionItemFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, value, mod, ...others } = useProps(\n    'AccordionItem',\n    defaultProps,\n    props\n  );\n  const ctx = useAccordionContext();\n\n  return (\n    <AccordionItemProvider value={{ value }}>\n      <Box\n        ref={ref}\n        mod={[{ active: ctx.isItemActive(value) }, mod]}\n        {...ctx.getStyles('item', { className, classNames, styles, style, variant: ctx.variant })}\n        {...others}\n      />\n    </AccordionItemProvider>\n  );\n});\n\nAccordionItem.displayName = '@mantine/core/AccordionItem';\nAccordionItem.classes = classes;\n","import type { MantineTheme } from '../../MantineProvider';\nimport type { MantineStyleProp } from '../Box.types';\n\nexport function getStyleObject(\n  style: MantineStyleProp | undefined,\n  theme: MantineTheme\n): React.CSSProperties {\n  if (Array.isArray(style)) {\n    return [...style].reduce<Record<string, any>>(\n      (acc, item) => ({ ...acc, ...getStyleObject(item, theme) }),\n      {}\n    );\n  }\n\n  if (typeof style === 'function') {\n    return style(theme);\n  }\n\n  if (style == null) {\n    return {};\n  }\n\n  return style;\n}\n","import { useRef, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { mergeRefs, useDidUpdate } from '@mantine/hooks';\nimport { CSSProperties } from '../../core';\n\nfunction getAutoHeightDuration(height: number | string) {\n  if (!height || typeof height === 'string') {\n    return 0;\n  }\n  const constant = height / 36;\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nexport function getElementHeight(\n  el: React.RefObject<HTMLElement | null> | { current?: { scrollHeight: number } }\n) {\n  return el?.current ? el.current.scrollHeight : 'auto';\n}\n\nconst raf = typeof window !== 'undefined' && window.requestAnimationFrame;\n\ninterface UseCollapse {\n  opened: boolean;\n  transitionDuration?: number;\n  transitionTimingFunction?: string;\n  onTransitionEnd?: () => void;\n}\n\ninterface GetCollapseProps {\n  [key: string]: unknown;\n  style?: CSSProperties;\n  onTransitionEnd?: (e: TransitionEvent) => void;\n  refKey?: string;\n  ref?: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport function useCollapse({\n  transitionDuration,\n  transitionTimingFunction = 'ease',\n  onTransitionEnd = () => {},\n  opened,\n}: UseCollapse): (props: GetCollapseProps) => Record<string, any> {\n  const el = useRef<HTMLElement | null>(null);\n  const collapsedHeight = 0;\n  const collapsedStyles = {\n    display: 'none',\n    height: 0,\n    overflow: 'hidden',\n  };\n  const [styles, setStylesRaw] = useState<CSSProperties>(opened ? {} : collapsedStyles);\n  const setStyles = (newStyles: {} | ((oldStyles: {}) => {})): void => {\n    flushSync(() => setStylesRaw(newStyles));\n  };\n\n  const mergeStyles = (newStyles: {}): void => {\n    setStyles((oldStyles) => ({ ...oldStyles, ...newStyles }));\n  };\n\n  function getTransitionStyles(height: number | string): {\n    transition: string;\n  } {\n    const _duration = transitionDuration || getAutoHeightDuration(height);\n    return {\n      transition: `height ${_duration}ms ${transitionTimingFunction}, opacity ${_duration}ms ${transitionTimingFunction}`,\n    };\n  }\n\n  useDidUpdate(() => {\n    if (typeof raf === 'function') {\n      if (opened) {\n        raf(() => {\n          mergeStyles({ willChange: 'height', display: 'block', overflow: 'hidden' });\n          raf(() => {\n            const height = getElementHeight(el);\n            mergeStyles({ ...getTransitionStyles(height), height });\n          });\n        });\n      } else {\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles({ ...getTransitionStyles(height), willChange: 'height', height });\n          raf(() => mergeStyles({ height: collapsedHeight, overflow: 'hidden' }));\n        });\n      }\n    }\n  }, [opened]);\n\n  const handleTransitionEnd = (e: React.TransitionEvent): void => {\n    if (e.target !== el.current || e.propertyName !== 'height') {\n      return;\n    }\n\n    if (opened) {\n      const height = getElementHeight(el);\n\n      if (height === styles.height) {\n        setStyles({});\n      } else {\n        mergeStyles({ height });\n      }\n\n      onTransitionEnd();\n    } else if (styles.height === collapsedHeight) {\n      setStyles(collapsedStyles);\n      onTransitionEnd();\n    }\n  };\n\n  function getCollapseProps({ style = {}, refKey = 'ref', ...rest }: GetCollapseProps = {}) {\n    const theirRef: any = rest[refKey];\n    return {\n      'aria-hidden': !opened,\n      ...rest,\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: handleTransitionEnd,\n      style: { boxSizing: 'border-box', ...style, ...styles },\n    };\n  }\n\n  return getCollapseProps;\n}\n","import { useReducedMotion } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  Factory,\n  factory,\n  getStyleObject,\n  useMantineTheme,\n  useProps,\n} from '../../core';\nimport { useCollapse } from './use-collapse';\n\nexport interface CollapseProps\n  extends BoxProps,\n    Omit<React.ComponentPropsWithoutRef<'div'>, keyof BoxProps> {\n  /** Opened state */\n  in: boolean;\n\n  /** Called each time transition ends */\n  onTransitionEnd?: () => void;\n\n  /** Transition duration in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Transition timing function, default value is `ease` */\n  transitionTimingFunction?: string;\n\n  /** Determines whether opacity should be animated, `true` by default */\n  animateOpacity?: boolean;\n}\n\nexport type CollapseFactory = Factory<{\n  props: CollapseProps;\n  ref: HTMLDivElement;\n}>;\n\nconst defaultProps: Partial<CollapseProps> = {\n  transitionDuration: 200,\n  transitionTimingFunction: 'ease',\n  animateOpacity: true,\n};\n\nexport const Collapse = factory<CollapseFactory>((props, ref) => {\n  const {\n    children,\n    in: opened,\n    transitionDuration,\n    transitionTimingFunction,\n    style,\n    onTransitionEnd,\n    animateOpacity,\n    ...others\n  } = useProps('Collapse', defaultProps, props);\n\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 0 : transitionDuration;\n\n  const getCollapseProps = useCollapse({\n    opened,\n    transitionDuration: duration,\n    transitionTimingFunction,\n    onTransitionEnd,\n  });\n\n  if (duration === 0) {\n    return opened ? <Box {...others}>{children}</Box> : null;\n  }\n\n  return (\n    <Box\n      {...getCollapseProps({\n        style: {\n          opacity: opened || !animateOpacity ? 1 : 0,\n          transition: animateOpacity ? `opacity ${duration}ms ${transitionTimingFunction}` : 'none',\n          ...getStyleObject(style, theme),\n        },\n        ref,\n        ...others,\n      })}\n    >\n      {children}\n    </Box>\n  );\n});\n\nCollapse.displayName = '@mantine/core/Collapse';\n","import {\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { Collapse } from '../../Collapse';\nimport { useAccordionContext } from '../Accordion.context';\nimport { useAccordionItemContext } from '../AccordionItem.context';\nimport classes from '../Accordion.module.css';\n\nexport type AccordionPanelStylesNames = 'panel' | 'content';\n\nexport interface AccordionPanelProps\n  extends BoxProps,\n    CompoundStylesApiProps<AccordionPanelFactory>,\n    ElementProps<'div'> {\n  /** Called when the panel animation completes */\n  onTransitionEnd?: () => void;\n}\n\nexport type AccordionPanelFactory = Factory<{\n  props: AccordionPanelProps;\n  ref: HTMLDivElement;\n  stylesNames: AccordionPanelStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<AccordionPanelProps> = {};\n\nexport const AccordionPanel = factory<AccordionPanelFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, children, ...others } = useProps(\n    'AccordionPanel',\n    defaultProps,\n    props\n  );\n\n  const { value } = useAccordionItemContext();\n  const ctx = useAccordionContext();\n\n  return (\n    <Collapse\n      ref={ref}\n      {...ctx.getStyles('panel', { className, classNames, style, styles })}\n      {...others}\n      in={ctx.isItemActive(value)}\n      transitionDuration={ctx.transitionDuration ?? 200}\n      role=\"region\"\n      id={ctx.getRegionId(value)}\n      aria-labelledby={ctx.getControlId(value)}\n    >\n      <div {...ctx.getStyles('content', { classNames, styles })}>{children}</div>\n    </Collapse>\n  );\n});\n\nAccordionPanel.displayName = '@mantine/core/AccordionPanel';\nAccordionPanel.classes = classes;\n","import { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  ExtendComponent,\n  Factory,\n  getRadius,\n  getSafeId,\n  getWithProps,\n  MantineRadius,\n  MantineThemeComponent,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AccordionProvider } from './Accordion.context';\nimport { AccordionChevronPosition, AccordionHeadingOrder, AccordionValue } from './Accordion.types';\nimport { AccordionChevron } from './AccordionChevron';\nimport { AccordionControl } from './AccordionControl/AccordionControl';\nimport { AccordionItem } from './AccordionItem/AccordionItem';\nimport { AccordionPanel } from './AccordionPanel/AccordionPanel';\nimport classes from './Accordion.module.css';\n\nexport type AccordionStylesNames =\n  | 'root'\n  | 'content'\n  | 'item'\n  | 'panel'\n  | 'icon'\n  | 'chevron'\n  | 'label'\n  | 'itemTitle'\n  | 'control';\n\nexport type AccordionVariant = 'default' | 'contained' | 'filled' | 'separated';\nexport type AccordionCssVariables = {\n  root: '--accordion-transition-duration' | '--accordion-chevron-size' | '--accordion-radius';\n};\n\nexport interface AccordionProps<Multiple extends boolean = false>\n  extends BoxProps,\n    StylesApiProps<AccordionFactory>,\n    ElementProps<'div', 'value' | 'defaultValue' | 'onChange'> {\n  /** Determines whether multiple items can be opened at a time, `false` by default */\n  multiple?: Multiple;\n\n  /** Value for controlled component */\n  value?: AccordionValue<Multiple>;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: AccordionValue<Multiple>;\n\n  /** Called when value changes */\n  onChange?: (value: AccordionValue<Multiple>) => void;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** Transition duration in ms, `200` by default */\n  transitionDuration?: number;\n\n  /** Determines whether chevron rotation should be disabled, `false` by default */\n  disableChevronRotation?: boolean;\n\n  /** Position of the chevron relative to the item label, `right` by default */\n  chevronPosition?: AccordionChevronPosition;\n\n  /** Size of the chevron icon container, `24` by default */\n  chevronSize?: number | string;\n\n  /** Heading order, has no effect on visuals */\n  order?: AccordionHeadingOrder;\n\n  /** Custom chevron icon that will be used in all items */\n  chevron?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: MantineRadius;\n}\n\nexport type AccordionFactory = Factory<{\n  props: AccordionProps;\n  ref: HTMLDivElement;\n  stylesNames: AccordionStylesNames;\n  vars: AccordionCssVariables;\n  variant: AccordionVariant;\n}>;\n\nconst defaultProps: Partial<AccordionProps> = {\n  multiple: false,\n  disableChevronRotation: false,\n  chevronPosition: 'right',\n  variant: 'default',\n  chevron: <AccordionChevron />,\n};\n\nconst varsResolver = createVarsResolver<AccordionFactory>(\n  (_, { transitionDuration, chevronSize, radius }) => ({\n    root: {\n      '--accordion-transition-duration':\n        transitionDuration === undefined ? undefined : `${transitionDuration}ms`,\n      '--accordion-chevron-size': chevronSize === undefined ? undefined : rem(chevronSize),\n      '--accordion-radius': radius === undefined ? undefined : getRadius(radius),\n    },\n  })\n);\n\nexport function Accordion<Multiple extends boolean = false>(_props: AccordionProps<Multiple>) {\n  const props = useProps('Accordion', defaultProps as AccordionProps<Multiple>, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    multiple,\n    value,\n    defaultValue,\n    onChange,\n    id,\n    loop,\n    transitionDuration,\n    disableChevronRotation,\n    chevronPosition,\n    chevronSize,\n    order,\n    chevron,\n    variant,\n    radius,\n    ...others\n  } = props;\n\n  const uid = useId(id);\n  const [_value, handleChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? ([] as any) : null,\n    onChange,\n  });\n\n  const isItemActive = (itemValue: string) =>\n    Array.isArray(_value) ? _value.includes(itemValue) : itemValue === _value;\n\n  const handleItemChange = (itemValue: string) => {\n    const nextValue: AccordionValue<Multiple> = Array.isArray(_value)\n      ? _value.includes(itemValue)\n        ? _value.filter((selectedValue) => selectedValue !== itemValue)\n        : [..._value, itemValue]\n      : itemValue === _value\n        ? null\n        : (itemValue as any);\n\n    handleChange(nextValue);\n  };\n\n  const getStyles = useStyles<AccordionFactory>({\n    name: 'Accordion',\n    classes,\n    props: props as AccordionProps,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <AccordionProvider\n      value={{\n        isItemActive,\n        onChange: handleItemChange,\n        getControlId: getSafeId(\n          `${uid}-control`,\n          'Accordion.Item component was rendered with invalid value or without value'\n        ),\n        getRegionId: getSafeId(\n          `${uid}-panel`,\n          'Accordion.Item component was rendered with invalid value or without value'\n        ),\n        transitionDuration,\n        disableChevronRotation,\n        chevronPosition,\n        order,\n        chevron,\n        loop,\n        getStyles,\n        variant,\n        unstyled,\n      }}\n    >\n      <Box {...getStyles('root')} id={uid} {...others} variant={variant} data-accordion>\n        {children}\n      </Box>\n    </AccordionProvider>\n  );\n}\n\nconst extendAccordion = (c: ExtendComponent<AccordionFactory>): MantineThemeComponent => c;\n\nAccordion.extend = extendAccordion;\nAccordion.withProps = getWithProps<AccordionProps, AccordionProps>(Accordion as any);\nAccordion.classes = classes;\nAccordion.displayName = '@mantine/core/Accordion';\nAccordion.Item = AccordionItem;\nAccordion.Panel = AccordionPanel;\nAccordion.Control = AccordionControl;\nAccordion.Chevron = AccordionChevron;\n","import React from 'react';\r\nimport { Container, Title, Accordion, Text, Paper, Grid } from '@mantine/core';\r\n\r\nconst FAQ: React.FC = () => {\r\n  const faqs = [\r\n    {\r\n      question: \"What areas do you cover?\",\r\n      answer: \"We primarily serve Aldershot, Farnborough, Fleet, and surrounding areas in Hampshire. Contact us to check if we cover your specific location.\"\r\n    },\r\n    {\r\n      question: \"Are you fully insured?\",\r\n      answer: \"Yes, we carry comprehensive public liability insurance up to £5 million and employer's liability insurance. We're happy to provide insurance documentation upon request.\"\r\n    },\r\n    {\r\n      question: \"How much does tree removal cost?\",\r\n      answer: \"The cost varies depending on the size, location, and condition of the tree. We provide free, no-obligation quotes after assessing the job in person.\"\r\n    },\r\n    {\r\n      question: \"Do you offer emergency services?\",\r\n      answer: \"Yes, we provide 24/7 emergency tree surgery services for dangerous or fallen trees. Contact our emergency hotline for immediate assistance.\"\r\n    },\r\n    {\r\n      question: \"What qualifications do your tree surgeons have?\",\r\n      answer: \"All our tree surgeons are NPTC qualified and hold relevant certificates in chainsaw use, aerial rescue, and tree felling. We regularly update our training to maintain the highest standards.\"\r\n    },\r\n    {\r\n      question: \"Do I need planning permission to remove a tree?\",\r\n      answer: \"It depends on whether the tree is protected by a Tree Preservation Order (TPO) or located in a Conservation Area. We can help check this and assist with any necessary applications.\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Container size=\"xl\">\r\n      <Title order={1} mb=\"xl\">Frequently Asked Questions</Title>\r\n      \r\n      <Grid>\r\n        <Grid.Col span={{ base: 12, md: 8 }}>\r\n          <Paper shadow=\"xs\" p=\"xl\" radius=\"md\">\r\n            <Accordion>\r\n              {faqs.map((faq, index) => (\r\n                <Accordion.Item key={index} value={`faq-${index}`}>\r\n                  <Accordion.Control>{faq.question}</Accordion.Control>\r\n                  <Accordion.Panel>\r\n                    <Text>{faq.answer}</Text>\r\n                  </Accordion.Panel>\r\n                </Accordion.Item>\r\n              ))}\r\n            </Accordion>\r\n          </Paper>\r\n        </Grid.Col>\r\n        \r\n        <Grid.Col span={{ base: 12, md: 4 }}>\r\n          <Paper shadow=\"xs\" p=\"xl\" radius=\"md\" style={{ backgroundColor: '#f8f9fa' }}>\r\n            <Title order={3} mb=\"md\">Still Have Questions?</Title>\r\n            <Text mb=\"xl\">\r\n              Can't find the answer you're looking for? Feel free to contact us directly. \r\n              Our team is always happy to help with any queries about our tree surgery services.\r\n            </Text>\r\n            <Text>\r\n              Call us: <strong>01234 567890</strong><br />\r\n              Email: <strong>info@jstreeservices.com</strong>\r\n            </Text>\r\n          </Paper>\r\n        </Grid.Col>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FAQ;","/* eslint-disable no-empty */\nexport function findElementAncestor(element: HTMLElement, selector: string) {\n  let _element: HTMLElement | null = element;\n  while ((_element = _element.parentElement) && !_element.matches(selector)) {}\n  return _element;\n}\n","import { findElementAncestor } from '../find-element-ancestor/find-element-ancestor';\n\nfunction getPreviousIndex(current: number, elements: HTMLButtonElement[], loop: boolean) {\n  for (let i = current - 1; i >= 0; i -= 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = elements.length - 1; i > -1; i -= 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n\n  return current;\n}\n\nfunction getNextIndex(current: number, elements: HTMLButtonElement[], loop: boolean) {\n  for (let i = current + 1; i < elements.length; i += 1) {\n    if (!elements[i].disabled) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = 0; i < elements.length; i += 1) {\n      if (!elements[i].disabled) {\n        return i;\n      }\n    }\n  }\n\n  return current;\n}\n\n/** Validates that target element is on the same level as sibling, used to filter out children that have the same sibling selector */\nfunction onSameLevel(\n  target: HTMLButtonElement,\n  sibling: HTMLButtonElement,\n  parentSelector: string\n) {\n  return (\n    findElementAncestor(target, parentSelector) === findElementAncestor(sibling, parentSelector)\n  );\n}\n\ninterface GetElementsSiblingsInput {\n  /** Selector used to find parent node, e.g. '[role=\"tablist\"]', '.mantine-Text-root' */\n  parentSelector: string;\n\n  /** Selector used to find element siblings, e.g. '[data-tab]' */\n  siblingSelector: string;\n\n  /** Determines whether next/previous indices should loop */\n  loop?: boolean;\n\n  /** Determines which arrow keys will be used */\n  orientation: 'vertical' | 'horizontal';\n\n  /** Text direction */\n  dir?: 'rtl' | 'ltr';\n\n  /** Determines whether element should be clicked when focused with keyboard event */\n  activateOnFocus?: boolean;\n\n  /** External keydown event */\n  onKeyDown?: (event: React.KeyboardEvent<HTMLButtonElement>) => void;\n}\n\nexport function createScopedKeydownHandler({\n  parentSelector,\n  siblingSelector,\n  onKeyDown,\n  loop = true,\n  activateOnFocus = false,\n  dir = 'rtl',\n  orientation,\n}: GetElementsSiblingsInput) {\n  return (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    onKeyDown?.(event);\n\n    const elements = Array.from(\n      findElementAncestor(event.currentTarget, parentSelector)?.querySelectorAll<HTMLButtonElement>(\n        siblingSelector\n      ) || []\n    ).filter((node) => onSameLevel(event.currentTarget, node, parentSelector));\n\n    const current = elements.findIndex((el) => event.currentTarget === el);\n    const _nextIndex = getNextIndex(current, elements, loop);\n    const _previousIndex = getPreviousIndex(current, elements, loop);\n    const nextIndex = dir === 'rtl' ? _previousIndex : _nextIndex;\n    const previousIndex = dir === 'rtl' ? _nextIndex : _previousIndex;\n\n    switch (event.key) {\n      case 'ArrowRight': {\n        if (orientation === 'horizontal') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[nextIndex].focus();\n          activateOnFocus && elements[nextIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowLeft': {\n        if (orientation === 'horizontal') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[previousIndex].focus();\n          activateOnFocus && elements[previousIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowUp': {\n        if (orientation === 'vertical') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[_previousIndex].focus();\n          activateOnFocus && elements[_previousIndex].click();\n        }\n\n        break;\n      }\n\n      case 'ArrowDown': {\n        if (orientation === 'vertical') {\n          event.stopPropagation();\n          event.preventDefault();\n          elements[_nextIndex].focus();\n          activateOnFocus && elements[_nextIndex].click();\n        }\n\n        break;\n      }\n\n      case 'Home': {\n        event.stopPropagation();\n        event.preventDefault();\n        !elements[0].disabled && elements[0].focus();\n        break;\n      }\n\n      case 'End': {\n        event.stopPropagation();\n        event.preventDefault();\n        const last = elements.length - 1;\n        !elements[last].disabled && elements[last].focus();\n        break;\n      }\n    }\n  };\n}\n","export function getSafeId(uid: string, errorMessage: string) {\n  return (value: string) => {\n    if (typeof value !== 'string' || value.trim().length === 0) {\n      throw new Error(errorMessage);\n    }\n\n    return `${uid}-${value}`;\n  };\n}\n","import { useState } from 'react';\n\ninterface UseUncontrolledInput<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?: (value: T, ...payload: any[]) => void;\n}\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledInput<T>): [T, (value: T, ...payload: any[]) => void, boolean] {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T, ...payload: any[]) => {\n    setUncontrolledValue(val);\n    onChange?.(val, ...payload);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"],"names":["AccordionProvider","useAccordionContext","createSafeContext","AccordionChevron","_ref","style","size","others","jsx","viewBox","fill","xmlns","width","rem","height","display","children","d","fillRule","clipRule","displayName","AccordionItemProvider","useAccordionItemContext","defaultProps","AccordionControl","factory","props","ref","classNames","className","styles","vars","chevron","icon","onClick","onKeyDown","disabled","mod","useProps","value","ctx","isActive","isItemActive","shouldWrapWithHeading","order","Heading","content","jsxs","UnstyledButton","getStyles","variant","unstyled","active","chevronPosition","event","onChange","type","getRegionId","id","getControlId","createScopedKeydownHandler","siblingSelector","parentSelector","activateOnFocus","loop","orientation","Box","component","rotate","disableChevronRotation","position","classes","AccordionItem","getStyleObject","theme","Array","isArray","reduce","acc","item","getElementHeight","el","current","scrollHeight","raf","window","requestAnimationFrame","useCollapse","transitionDuration","transitionTimingFunction","onTransitionEnd","opened","useRef","collapsedStyles","overflow","setStylesRaw","useState","setStyles","newStyles","flushSync","mergeStyles","oldStyles","getTransitionStyles","_duration","constant","Math","round","getAutoHeightDuration","transition","useDidUpdate","willChange","handleTransitionEnd","e","target","propertyName","refKey","rest","arguments","length","undefined","theirRef","mergeRefs","boxSizing","animateOpacity","Collapse","in","useMantineTheme","shouldReduceMotion","useReducedMotion","duration","respectReducedMotion","getCollapseProps","opacity","AccordionPanel","role","multiple","varsResolver","createVarsResolver","_","chevronSize","radius","root","getRadius","Accordion","_props","defaultValue","uid","useId","_value","handleChange","useUncontrolled","finalValue","useStyles","name","itemValue","includes","nextValue","filter","selectedValue","getSafeId","extend","c","withProps","getWithProps","Item","Panel","Control","Chevron","FAQ","_jsxs","Container","_jsx","Title","mb","Grid","Col","span","base","md","Paper","shadow","p","question","answer","map","faq","index","Text","backgroundColor","findElementAncestor","element","selector","_element","parentElement","matches","dir","elements","from","currentTarget","querySelectorAll","node","sibling","onSameLevel","findIndex","_nextIndex","i","getNextIndex","_previousIndex","getPreviousIndex","nextIndex","previousIndex","key","stopPropagation","preventDefault","focus","click","last","errorMessage","trim","Error","uncontrolledValue","setUncontrolledValue","val","_len","payload","_key"],"sourceRoot":""}