{"version":3,"file":"static/js/520.53377ae3.chunk.js","mappings":"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","sources":["../node_modules/@tabler/icons-react/src/icons/IconArrowLeft.js","pages/ServiceDetail.tsx","../node_modules/@tabler/icons-react/src/icons/IconCalendar.js","../node_modules/@tabler/icons-react/src/icons/IconCheck.js","../node_modules/@mantine/core/src/components/Image/Image.tsx","../node_modules/@mantine/core/src/components/List/List.context.ts","../node_modules/@mantine/core/src/components/List/ListItem/ListItem.tsx","../node_modules/@mantine/core/src/components/List/List.tsx"],"sourcesContent":["import createReactComponent from '../createReactComponent';\nexport default createReactComponent('arrow-left', 'IconArrowLeft', [\n  ['path', { d: 'M5 12l14 0', key: 'svg-0' }],\n  ['path', { d: 'M5 12l6 6', key: 'svg-1' }],\n  ['path', { d: 'M5 12l6 -6', key: 'svg-2' }],\n]);\n","import React from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Container, Grid, Stack, Title, Text, Badge, List, Button, Card, Image, rem } from '@mantine/core';\r\nimport { motion } from 'framer-motion';\r\nimport { IconCheck, IconArrowLeft, IconPhone, IconCalendar } from '@tabler/icons-react';\r\nimport { ServiceDetail as IServiceDetail } from '../types';\r\n\r\nconst ServiceDetail: React.FC = () => {\r\n  const { slug } = useParams<{ slug: string }>();\r\n\r\n  // Mock data - replace with actual data fetching\r\n  const service: IServiceDetail = {\r\n    id: 1,\r\n    title: 'Tree Removal',\r\n    slug: 'tree-removal',\r\n    type: 'residential',\r\n    description: 'Professional and safe tree removal services for your property.',\r\n    features: [\r\n      'Complete tree removal',\r\n      'Stump removal options',\r\n      'Clean-up included',\r\n      'Free assessment'\r\n    ],\r\n    benefits: [\r\n      'Improves property safety',\r\n      'Prevents property damage',\r\n      'Enhances landscape appearance',\r\n      'Increases property value'\r\n    ],\r\n    safetyMeasures: [\r\n      'Comprehensive risk assessment',\r\n      'Advanced safety equipment',\r\n      'Trained professionals',\r\n      'Emergency protocols'\r\n    ],\r\n    insurance: {\r\n      coverage: 'Full public liability insurance up to £5 million',\r\n      amount: '£5,000,000'\r\n    },\r\n    image: '/assets/services/tree-removal.jpg',\r\n    galleryImages: [\r\n      '/assets/gallery/tree-removal-1.jpg',\r\n      '/assets/gallery/tree-removal-2.jpg',\r\n      '/assets/gallery/tree-removal-3.jpg'\r\n    ]\r\n  };\r\n\r\n  if (!service) {\r\n    return (\r\n      <Container size=\"xl\" py={80}>\r\n        <Text>Service not found</Text>\r\n        <Button \r\n          component={Link} \r\n          to=\"/services\" \r\n          leftSection={<IconArrowLeft size={16} />}\r\n        >\r\n          Back to Services\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container size=\"xl\" py={80}>\r\n      <Button\r\n        component={Link}\r\n        to=\"/services\"\r\n        variant=\"subtle\"\r\n        color=\"gray\"\r\n        leftSection={<IconArrowLeft size={16} />}\r\n        mb={40}\r\n      >\r\n        Back to Services\r\n      </Button>\r\n\r\n      <Grid gutter={40}>\r\n        <Grid.Col span={{ base: 12, md: 8 }}>\r\n          <Stack gap={40}>\r\n            <div>\r\n              <Title order={1} size=\"2.5rem\" mb=\"md\">{service.title}</Title>\r\n              <Text size=\"xl\" c=\"dimmed\">\r\n                {service.description}\r\n              </Text>\r\n            </div>\r\n\r\n            <div>\r\n              <Title order={2} mb=\"md\">Key Benefits</Title>\r\n              <List\r\n                spacing=\"sm\"\r\n                size=\"lg\"\r\n                icon={\r\n                  <IconCheck\r\n                    style={{ width: rem(20), height: rem(20) }}\r\n                    color=\"var(--mantine-color-green-5)\"\r\n                  />\r\n                }\r\n              >\r\n                {service.benefits.map((benefit, index) => (\r\n                  <List.Item key={index}>{benefit}</List.Item>\r\n                ))}\r\n              </List>\r\n            </div>\r\n\r\n            <div>\r\n              <Title order={2} mb=\"md\">Safety Measures</Title>\r\n              <List\r\n                spacing=\"sm\"\r\n                size=\"lg\"\r\n                icon={\r\n                  <IconCheck\r\n                    style={{ width: rem(20), height: rem(20) }}\r\n                    color=\"var(--mantine-color-green-5)\"\r\n                  />\r\n                }\r\n              >\r\n                {service.safetyMeasures.map((measure, index) => (\r\n                  <List.Item key={index}>{measure}</List.Item>\r\n                ))}\r\n              </List>\r\n            </div>\r\n\r\n            <div>\r\n              <Title order={2} mb=\"xl\">Gallery</Title>\r\n              <Grid>\r\n                {service.galleryImages.map((image, index) => (\r\n                  <Grid.Col span={{ base: 12, sm: 6, md: 4 }} key={index}>\r\n                    <Image\r\n                      src={image}\r\n                      radius=\"md\"\r\n                      alt={`${service.title} gallery image ${index + 1}`}\r\n                    />\r\n                  </Grid.Col>\r\n                ))}\r\n              </Grid>\r\n            </div>\r\n          </Stack>\r\n        </Grid.Col>\r\n\r\n        <Grid.Col span={{ base: 12, md: 4 }}>\r\n          <Card withBorder shadow=\"sm\" radius=\"md\" padding=\"xl\">\r\n            <Stack gap=\"xl\">\r\n              <div>\r\n                <Title order={3} mb=\"xs\">Insurance Coverage</Title>\r\n                <Text c=\"dimmed\">{service.insurance.coverage}</Text>\r\n              </div>\r\n\r\n              <Stack gap=\"md\">\r\n                <Button\r\n                  size=\"lg\"\r\n                  leftSection={<IconCalendar size={20} />}\r\n                  component={Link}\r\n                  to=\"/contact\"\r\n                >\r\n                  Book a Service\r\n                </Button>\r\n\r\n                <Button\r\n                  size=\"lg\"\r\n                  variant=\"light\"\r\n                  leftSection={<IconPhone size={20} />}\r\n                  component=\"a\"\r\n                  href=\"tel:+441234567890\"\r\n                >\r\n                  Call Us\r\n                </Button>\r\n              </Stack>\r\n            </Stack>\r\n          </Card>\r\n        </Grid.Col>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServiceDetail;","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('calendar', 'IconCalendar', [\n  [\n    'path',\n    {\n      d: 'M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M16 3v4', key: 'svg-1' }],\n  ['path', { d: 'M8 3v4', key: 'svg-2' }],\n  ['path', { d: 'M4 11h16', key: 'svg-3' }],\n  ['path', { d: 'M11 15h1', key: 'svg-4' }],\n  ['path', { d: 'M12 15v3', key: 'svg-5' }],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('check', 'IconCheck', [\n  ['path', { d: 'M5 12l5 5l10 -10', key: 'svg-0' }],\n]);\n","import { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Image.module.css';\n\nexport type ImageStylesNames = 'root';\nexport type ImageCssVariables = {\n  root: '--image-radius' | '--image-object-fit';\n};\n\nexport interface ImageProps extends BoxProps, StylesApiProps<ImageFactory> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `0` by default */\n  radius?: MantineRadius;\n\n  /** Controls `object-fit` style, `'cover'` by default */\n  fit?: React.CSSProperties['objectFit'];\n\n  /** Image url that will be used as a fallback in case `src` prop is not set or image cannot be loaded */\n  fallbackSrc?: string;\n\n  /** Image url */\n  src?: any;\n\n  /** Called when image fails to load */\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n}\n\nexport type ImageFactory = PolymorphicFactory<{\n  props: ImageProps;\n  defaultRef: HTMLImageElement;\n  defaultComponent: 'img';\n  stylesNames: ImageStylesNames;\n  vars: ImageCssVariables;\n}>;\n\nconst defaultProps: Partial<ImageProps> = {};\n\nconst varsResolver = createVarsResolver<ImageFactory>((_, { radius, fit }) => ({\n  root: {\n    '--image-radius': radius === undefined ? undefined : getRadius(radius),\n    '--image-object-fit': fit,\n  },\n}));\n\nexport const Image = polymorphicFactory<ImageFactory>((_props, ref) => {\n  const props = useProps('Image', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n\n  const [error, setError] = useState(!src);\n\n  useEffect(() => setError(!src), [src]);\n\n  const getStyles = useStyles<ImageFactory>({\n    name: 'Image',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (error && fallbackSrc) {\n    return (\n      <Box\n        component=\"img\"\n        ref={ref}\n        src={fallbackSrc}\n        {...getStyles('root')}\n        onError={onError}\n        mod={['fallback', mod]}\n        {...others}\n      />\n    );\n  }\n\n  return (\n    <Box\n      component=\"img\"\n      ref={ref}\n      {...getStyles('root')}\n      src={src}\n      onError={(event) => {\n        onError?.(event);\n        setError(true);\n      }}\n      mod={mod}\n      {...others}\n    />\n  );\n});\n\nImage.classes = classes;\nImage.displayName = '@mantine/core/Image';\n","import { createSafeContext, GetStylesApi } from '../../core';\nimport type { ListFactory } from './List';\n\ninterface ListContextValue {\n  getStyles: GetStylesApi<ListFactory>;\n  center: boolean | undefined;\n  icon: React.ReactNode | undefined;\n}\n\nexport const [ListProvider, useListContext] = createSafeContext<ListContextValue>(\n  'List component was not found in tree'\n);\n","import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useListContext } from '../List.context';\nimport classes from '../List.module.css';\n\nexport type ListItemStylesNames = 'item' | 'itemWrapper' | 'itemIcon' | 'itemLabel';\n\nexport interface ListItemProps\n  extends BoxProps,\n    CompoundStylesApiProps<ListItemFactory>,\n    ElementProps<'li'> {\n  /** Icon to replace item bullet */\n  icon?: React.ReactNode;\n\n  /** Item content */\n  children?: React.ReactNode;\n}\n\nexport type ListItemFactory = Factory<{\n  props: ListItemProps;\n  ref: HTMLLIElement;\n  stylesNames: ListItemStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ListItemProps> = {};\n\nexport const ListItem = factory<ListItemFactory>((_props, ref) => {\n  const props = useProps('ListItem', defaultProps, _props);\n  const { classNames, className, style, styles, vars, icon, children, mod, ...others } = props;\n\n  const ctx = useListContext();\n  const _icon = icon || ctx.icon;\n  const stylesApiProps = { classNames, styles };\n\n  return (\n    <Box\n      {...ctx.getStyles('item', { ...stylesApiProps, className, style })}\n      component=\"li\"\n      mod={[{ 'with-icon': !!_icon, centered: ctx.center }, mod]}\n      ref={ref}\n      {...others}\n    >\n      <div {...ctx.getStyles('itemWrapper', stylesApiProps)}>\n        {_icon && <span {...ctx.getStyles('itemIcon', stylesApiProps)}>{_icon}</span>}\n        <span {...ctx.getStyles('itemLabel', stylesApiProps)}>{children}</span>\n      </div>\n    </Box>\n  );\n});\n\nListItem.classes = classes;\nListItem.displayName = '@mantine/core/ListItem';\n","import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  getLineHeight,\n  getSpacing,\n  MantineSize,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ListProvider } from './List.context';\nimport { ListItem, ListItemStylesNames } from './ListItem/ListItem';\nimport classes from './List.module.css';\n\nexport type ListStylesNames = 'root' | ListItemStylesNames;\nexport type ListCssVariables = {\n  root: '--list-fz' | '--list-lh' | '--list-spacing';\n};\n\nexport interface ListProps\n  extends BoxProps,\n    StylesApiProps<ListFactory>,\n    ElementProps<'ul', 'type'> {\n  /** `List.Item` components only */\n  children?: React.ReactNode;\n\n  /** List type: `ol` or `ul`, `'unordered'` by default */\n  type?: 'ordered' | 'unordered';\n\n  /** Determines whether list items should be offset with padding, `false` by default */\n  withPadding?: boolean;\n\n  /** Controls `font-size` and `line-height`, `'md'` by default */\n  size?: MantineSize;\n\n  /** Icon that replaces list item dot */\n  icon?: React.ReactNode;\n\n  /** Key of `theme.spacing` or any valid CSS value to set spacing between items, `0` by default */\n  spacing?: MantineSpacing;\n\n  /** Determines whether items must be centered with their icon, `false` by default */\n  center?: boolean;\n\n  /** Controls `list-style-type`, by default inferred from `type` */\n  listStyleType?: React.CSSProperties['listStyleType'];\n}\n\nexport type ListFactory = Factory<{\n  props: ListProps;\n  ref: HTMLUListElement;\n  stylesNames: ListStylesNames;\n  vars: ListCssVariables;\n  staticComponents: {\n    Item: typeof ListItem;\n  };\n}>;\n\nconst defaultProps: Partial<ListProps> = {\n  type: 'unordered',\n};\n\nconst varsResolver = createVarsResolver<ListFactory>((_, { size, spacing }) => ({\n  root: {\n    '--list-fz': getFontSize(size),\n    '--list-lh': getLineHeight(size),\n    '--list-spacing': getSpacing(spacing),\n  },\n}));\n\nexport const List = factory<ListFactory>((_props, ref) => {\n  const props = useProps('List', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    type,\n    withPadding,\n    icon,\n    spacing,\n    center,\n    listStyleType,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ListFactory>({\n    name: 'List',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ListProvider value={{ center, icon, getStyles }}>\n      <Box<any>\n        {...getStyles('root', { style: { listStyleType } })}\n        component={type === 'unordered' ? ('ul' as const) : ('ol' as const)}\n        mod={[{ 'with-padding': withPadding }, mod]}\n        ref={ref}\n        {...others}\n      >\n        {children}\n      </Box>\n    </ListProvider>\n  );\n});\n\nList.classes = classes;\nList.displayName = '@mantine/core/List';\nList.Item = ListItem;\n"],"names":["IconArrowLeft","createReactComponent","d","key","ServiceDetail","slug","useParams","service","id","title","type","description","features","benefits","safetyMeasures","insurance","coverage","amount","image","galleryImages","_jsxs","Container","size","py","children","_jsx","Button","component","Link","to","variant","color","leftSection","mb","Grid","gutter","Col","span","base","md","Stack","gap","Title","order","Text","c","List","spacing","icon","IconCheck","style","width","rem","height","map","benefit","index","Item","measure","sm","Image","src","radius","alt","Card","withBorder","shadow","padding","IconCalendar","IconPhone","href","defaultProps","varsResolver","createVarsResolver","_","_ref","fit","root","getRadius","polymorphicFactory","_props","ref","props","useProps","classNames","className","styles","unstyled","vars","onError","fallbackSrc","mod","others","error","setError","useState","useEffect","getStyles","useStyles","name","classes","jsx","Box","event","displayName","ListProvider","useListContext","createSafeContext","ListItem","factory","ctx","_icon","stylesApiProps","centered","center","jsxs","getFontSize","getLineHeight","getSpacing","withPadding","listStyleType","value"],"sourceRoot":""}