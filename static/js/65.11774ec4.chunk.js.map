{"version":3,"file":"static/js/65.11774ec4.chunk.js","mappings":"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","sources":["components/Map/InteractiveMap.tsx","../node_modules/@tabler/icons-react/src/icons/IconMailFilled.js","pages/Map.tsx"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, Circle, Popup, Marker } from 'react-leaflet';\nimport { Card, Text, Badge, Group, Stack, Title } from '@mantine/core';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default marker icons in React + Leaflet\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst customIcon = new L.Icon({\n  iconUrl: '/assets/map/tree-marker.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32],\n});\n\nconst InteractiveMap: React.FC = () => {\n  const mainLocation = [51.2478, -0.7783]; // Aldershot coordinates\n  const serviceAreas = [\n    {\n      id: 1,\n      name: 'Aldershot',\n      coordinates: [51.2478, -0.7783],\n      radius: 5000,\n      color: '#43A047',\n    },\n    {\n      id: 2,\n      name: 'Farnborough',\n      coordinates: [51.2867, -0.7526],\n      radius: 4000,\n      color: '#66BB6A',\n    },\n    {\n      id: 3,\n      name: 'Fleet',\n      coordinates: [51.2833, -0.8417],\n      radius: 4000,\n      color: '#81C784',\n    },\n    {\n      id: 4,\n      name: 'Farnham',\n      coordinates: [51.2149, -0.7987],\n      radius: 4000,\n      color: '#A5D6A7',\n    },\n  ];\n\n  return (\n    <Card withBorder radius=\"md\" padding={0}>\n      <div style={{ height: '500px', position: 'relative' }}>\n        <MapContainer\n          center={mainLocation as L.LatLngExpression}\n          zoom={12}\n          style={{ height: '100%', width: '100%', zIndex: 1 }}\n          scrollWheelZoom={false}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n\n          {/* Main Location Marker */}\n          <Marker position={mainLocation as L.LatLngExpression} icon={customIcon}>\n            <Popup>\n              <Stack gap=\"xs\">\n                <Title order={6}>JS Tree Services</Title>\n                <Text size=\"sm\">123 Tree Street, Aldershot</Text>\n                <Badge color=\"green\">Main Office</Badge>\n              </Stack>\n            </Popup>\n          </Marker>\n\n          {/* Service Area Circles */}\n          {serviceAreas.map((area) => (\n            <Circle\n              key={area.id}\n              center={area.coordinates as L.LatLngExpression}\n              radius={area.radius}\n              pathOptions={{\n                fillColor: area.color,\n                fillOpacity: 0.2,\n                color: area.color,\n                weight: 1,\n              }}\n            >\n              <Popup>\n                <Stack gap=\"xs\">\n                  <Text fw={500}>{area.name}</Text>\n                  <Text size=\"sm\">Service coverage area</Text>\n                  <Text size=\"xs\" c=\"dimmed\">\n                    Radius: {(area.radius / 1000).toFixed(1)}km\n                  </Text>\n                </Stack>\n              </Popup>\n            </Circle>\n          ))}\n        </MapContainer>\n\n        {/* Legend */}\n        <Card\n          withBorder\n          padding=\"xs\"\n          radius=\"md\"\n          style={{\n            position: 'absolute',\n            bottom: '20px',\n            right: '20px',\n            zIndex: 1000,\n            backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          }}\n        >\n          <Stack gap=\"xs\">\n            <Text fw={500} size=\"sm\">Service Areas</Text>\n            {serviceAreas.map((area) => (\n              <Group key={area.id} gap=\"xs\">\n                <div\n                  style={{\n                    width: 12,\n                    height: 12,\n                    borderRadius: '50%',\n                    backgroundColor: area.color,\n                  }}\n                />\n                <Text size=\"xs\">{area.name}</Text>\n              </Group>\n            ))}\n          </Stack>\n        </Card>\n      </div>\n    </Card>\n  );\n};\n\nexport default InteractiveMap;","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('mail-filled', 'IconMailFilled', [\n  [\n    'path',\n    {\n      d: 'M22 7.535v9.465a3 3 0 0 1 -2.824 2.995l-.176 .005h-14a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-9.465l9.445 6.297l.116 .066a1 1 0 0 0 .878 0l.116 -.066l9.445 -6.297z',\n      fill: 'currentColor',\n      key: 'svg-0',\n      strokeWidth: '0',\n    },\n  ],\n  [\n    'path',\n    {\n      d: 'M19 4c1.08 0 2.027 .57 2.555 1.427l-9.555 6.37l-9.555 -6.37a2.999 2.999 0 0 1 2.354 -1.42l.201 -.007h14z',\n      fill: 'currentColor',\n      key: 'svg-1',\n      strokeWidth: '0',\n    },\n  ],\n]);\n","import React from 'react';\nimport { Container, Title, Text, Grid, Card, Group, Stack, Badge, Button } from '@mantine/core';\nimport { motion } from 'framer-motion';\nimport { IconPhone, IconMailFilled } from '@tabler/icons-react';\nimport InteractiveMap from '../components/Map/InteractiveMap';\nimport { Link } from 'react-router-dom';\n\nconst MotionDiv = motion.div;\n\nconst Map: React.FC = () => {\n  const servicePoints = [\n    {\n      area: 'Aldershot',\n      response: '20 minutes',\n      coverage: 'Full service area',\n      services: ['Emergency Response', 'Regular Maintenance', 'Tree Removal', 'Crown Reduction']\n    },\n    {\n      area: 'Farnborough',\n      response: '25 minutes',\n      coverage: 'Full service area',\n      services: ['Emergency Response', 'Tree Removal', 'Crown Reduction', 'Stump Grinding']\n    },\n    {\n      area: 'Fleet',\n      response: '30 minutes',\n      coverage: 'Selected services',\n      services: ['Emergency Response', 'Tree Removal', 'Crown Reduction']\n    },\n    {\n      area: 'Farnham',\n      response: '35 minutes',\n      coverage: 'Selected services',\n      services: ['Emergency Response', 'Tree Removal']\n    }\n  ];\n\n  return (\n    <Container size=\"xl\" py={80}>\n      <Stack gap={50}>\n        <div>\n          <Title order={1} size=\"3rem\" ta=\"center\">Service Areas</Title>\n          <Text c=\"dimmed\" size=\"xl\" ta=\"center\" mt=\"md\" maw={800} mx=\"auto\">\n            We provide professional tree services across Hampshire, with rapid response times \n            and comprehensive coverage in key areas.\n          </Text>\n        </div>\n\n        <InteractiveMap />\n\n        <Grid>\n          {servicePoints.map((point, index) => (\n            <Grid.Col key={point.area} span={{ base: 12, sm: 6, md: 3 }}>\n              <MotionDiv\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card withBorder padding=\"xl\" radius=\"md\">\n                  <Stack gap=\"md\">\n                    <Title order={3}>{point.area}</Title>\n                    <Group gap={8}>\n                      <Badge color=\"green\" size=\"lg\">\n                        {point.response} response\n                      </Badge>\n                      <Badge color=\"blue\" size=\"lg\">\n                        {point.coverage}\n                      </Badge>\n                    </Group>\n                    <Text size=\"sm\" fw={500}>Available Services:</Text>\n                    <Stack gap={8}>\n                      {point.services.map((service) => (\n                        <Text key={service} size=\"sm\">\n                          • {service}\n                        </Text>\n                      ))}\n                    </Stack>\n                  </Stack>\n                </Card>\n              </MotionDiv>\n            </Grid.Col>\n          ))}\n        </Grid>\n\n        <Grid>\n          <Grid.Col span={{ base: 12, md: 6 }}>\n            <MotionDiv\n              initial={{ opacity: 0, x: -20 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card withBorder padding=\"xl\" radius=\"md\">\n                <Stack gap=\"md\">\n                  <Title order={3}>Need Emergency Service?</Title>\n                  <Text>\n                    Our emergency team is available 24/7 for urgent tree care situations \n                    across all our service areas.\n                  </Text>\n                  <Button\n                    component=\"a\"\n                    href=\"tel:+441234567890\"\n                    size=\"lg\"\n                    color=\"red\"\n                    leftSection={<IconPhone size={20} />}\n                  >\n                    Emergency Hotline\n                  </Button>\n                </Stack>\n              </Card>\n            </MotionDiv>\n          </Grid.Col>\n\n          <Grid.Col span={{ base: 12, md: 6 }}>\n            <MotionDiv\n              initial={{ opacity: 0, x: 20 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n              viewport={{ once: true }}\n            >\n              <Card withBorder padding=\"xl\" radius=\"md\">\n                <Stack gap=\"md\">\n                  <Title order={3}>Get a Free Quote</Title>\n                  <Text>\n                    Not sure if you're in our service area? Contact us for a free consultation \n                    and quote for your tree care needs.\n                  </Text>\n                  <Group>\n                    <Button\n                      component={Link}\n                      to=\"/contact\"\n                      size=\"lg\"\n                      color=\"green\"\n                      leftSection={<IconMailFilled size={20} />}\n                    >\n                      Contact Us\n                    </Button>\n                  </Group>\n                </Stack>\n              </Card>\n            </MotionDiv>\n          </Grid.Col>\n        </Grid>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default Map;"],"names":["L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","customIcon","iconSize","iconAnchor","popupAnchor","InteractiveMap","mainLocation","serviceAreas","id","name","coordinates","radius","color","_jsx","Card","withBorder","padding","children","_jsxs","style","height","position","MapContainer","center","zoom","width","zIndex","scrollWheelZoom","TileLayer","attribution","url","Marker","icon","Popup","Stack","gap","Title","order","Text","size","Badge","map","area","Circle","pathOptions","fillColor","fillOpacity","weight","fw","c","toFixed","bottom","right","backgroundColor","Group","borderRadius","IconMailFilled","createReactComponent","d","fill","key","strokeWidth","MotionDiv","motion","div","Map","Container","py","ta","mt","maw","mx","Grid","response","coverage","services","point","index","Col","span","base","sm","md","initial","opacity","y","whileInView","transition","duration","delay","viewport","once","service","x","Button","component","href","leftSection","IconPhone","Link","to"],"sourceRoot":""}