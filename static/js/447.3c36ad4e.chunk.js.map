{"version":3,"file":"static/js/447.3c36ad4e.chunk.js","mappings":"4VAMA,MAAMA,EAAYC,EAAAA,EAAOC,IA6PzB,EA3PuBC,KACrB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAwB,MAWlEG,EAAwB,CAC5B,CACEC,GAAI,EACJC,MAAO,sCACPC,QAAS,yKAETC,OAAQ,cACRC,UAAW,aACXC,SAAU,kBACVC,SAAU,oCACVC,SAAU,aACVC,KAAM,CAAC,cAAe,cAAe,aAEvC,CACER,GAAI,EACJC,MAAO,6DACPC,QAAS,kLAETC,OAAQ,gBACRC,UAAW,aACXC,SAAU,uBACVC,SAAU,0CACVC,SAAU,aACVC,KAAM,CAAC,cAAe,iBAAkB,oBAKtCC,EAAgBV,EAAUW,QAAOC,IACrC,MAAMC,EAAgC,KAAhBlB,GACpBiB,EAAKV,MAAMY,cAAcC,SAASpB,EAAYmB,gBAC9CF,EAAKT,QAAQW,cAAcC,SAASpB,EAAYmB,gBAChDF,EAAKH,KAAKO,MAAKC,GAAOA,EAAIH,cAAcC,SAASpB,EAAYmB,iBAEzDI,GAAmBpB,GACF,cAArBA,GACAc,EAAKN,WAAaR,EAEpB,OAAOe,GAAiBK,CAAe,IAGnCC,EAAgBnB,EAAUoB,MAAM,EAAG,GAEzC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,KAAK,KAAKC,GAAI,GAAGC,UAC1BC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,IAAK,GAAGH,SAAA,EACbC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,MAAO,EAAGP,KAAK,OAAOQ,GAAG,SAAQN,SAAC,oBACzCJ,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACC,EAAE,SAASV,KAAK,KAAKQ,GAAG,SAASG,GAAG,KAAKC,IAAK,IAAKC,GAAG,OAAMX,SAAC,+FAMrEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,MAAO,EAAGP,KAAK,KAAKc,GAAI,GAAGZ,SAAC,uBACnCJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAI,CAAAb,SACFN,EAAcoB,KAAI,CAAC3B,EAAM4B,KACxBnB,EAAAA,EAAAA,KAACiB,EAAAA,EAAKG,IAAG,CAAeC,KAAM,CAAEC,KAAM,GAAIC,GAAI,GAAInB,UAChDC,EAAAA,EAAAA,MAACmB,EAAAA,EAAI,CACHC,YAAU,EACVC,QAAQ,KACRC,OAAO,KACPC,UAAWzD,EAAAA,EAAOC,IAClByD,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,GAAKC,MAAe,GAARhB,GAAcf,SAAA,EAElDJ,EAAAA,EAAAA,KAACwB,EAAAA,EAAKY,QAAO,CAAAhC,UACXJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CACJC,IAAK/C,EAAKL,SACVqD,OAAQ,IACRC,IAAKjD,EAAKV,WAIdwB,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACO,GAAG,KAAKN,IAAI,KAAIH,SAAA,EACrBJ,EAAAA,EAAAA,KAACyC,EAAAA,EAAK,CAACC,MAAM,QAAQC,QAAQ,QAAOvC,SACjCb,EAAKN,YAERe,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACiC,GAAI,IAAK1C,KAAK,KAAK2C,UAAW,EAAEzC,SACnCb,EAAKV,SAERwB,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAACvC,IAAI,KAAKK,EAAE,SAAQR,SAAA,EACxBJ,EAAAA,EAAAA,KAAC+C,EAAAA,EAAY,CAAC7C,KAAM,MACpBF,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SACZ,IAAI4C,KAAKzD,EAAKP,WAAWiE,mBAAmB,QAAS,CACpDC,IAAK,UACLC,MAAO,OACPC,KAAM,eAGVpD,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SAAC,YAChBJ,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SAAEb,EAAKJ,qBAnCfI,EAAKX,YA6C1ByB,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAACoC,MAAM,WAAWC,OAAO,KAAIlD,SAAA,EAChCJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAKG,IAAG,CAACC,KAAM,CAAEC,KAAM,GAAIiC,GAAI,GAAInD,UAClCJ,EAAAA,EAAAA,KAACwD,EAAAA,EAAS,CACRC,aAAazD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAU,CAACxD,KAAM,KAC/ByD,YAAY,qBACZC,MAAOtF,EACPuF,SAAWC,GAAMvF,EAAeuF,EAAEC,OAAOH,OACzC1D,KAAK,UAGTF,EAAAA,EAAAA,KAACiB,EAAAA,EAAKG,IAAG,CAACC,KAAM,CAAEC,KAAM,GAAIiC,GAAI,GAAInD,UAClCJ,EAAAA,EAAAA,KAACgE,EAAAA,EAAM,CACLL,YAAY,kBACZC,MAAOnF,EACPoF,SAAUnF,EACVuF,KA/HO,CACjB,YACA,iBACA,gBACA,uBACA,oBACA,mBA0HU/D,KAAK,KACLgE,WAAS,UAMflE,EAAAA,EAAAA,KAACiB,EAAAA,EAAI,CAAAb,SACFf,EAAc6B,KAAI,CAAC3B,EAAM4B,KACxBnB,EAAAA,EAAAA,KAACiB,EAAAA,EAAKG,IAAG,CAAeC,KAAM,GAAGjB,UAC/BJ,EAAAA,EAAAA,KAAC9B,EAAS,CACRiG,MAAO,CACLzC,QAAS,OACT0C,OAAQ,iBACRC,aAAc,MACdC,gBAAiB,SAEnBzC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,GAAKC,MAAe,GAARhB,GAAcf,UAElDC,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAACqC,OAAQ,EAAElD,SAAA,EACdJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAKG,IAAG,CAACC,KAAM,CAAEC,KAAM,GAAIC,GAAI,GAAInB,UAClCJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAK,CACJC,IAAK/C,EAAKL,SACVqD,OAAQ,IACRC,IAAKjD,EAAKV,WAGdmB,EAAAA,EAAAA,KAACiB,EAAAA,EAAKG,IAAG,CAACC,KAAM,CAAEC,KAAM,GAAIC,GAAI,GAAInB,UAClCC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,IAAI,KAAKgE,EAAE,KAAInE,SAAA,EACpBC,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAAC0B,QAAQ,gBAAepE,SAAA,EAC5BJ,EAAAA,EAAAA,KAACyC,EAAAA,EAAK,CAACC,MAAM,QAAQC,QAAQ,QAAOvC,SACjCb,EAAKN,YAERoB,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAACvC,IAAI,KAAKK,EAAE,SAAQR,SAAA,EACxBJ,EAAAA,EAAAA,KAACyE,EAAAA,EAAQ,CAACvE,KAAM,MAChBF,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SAAEb,EAAKR,gBAI1BiB,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CAACC,MAAO,EAAEL,SAAEb,EAAKV,SAEvBwB,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAAC0B,QAAQ,gBAAepE,SAAA,EAC5BC,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAACvC,IAAI,KAAKK,EAAE,SAAQR,SAAA,EACxBJ,EAAAA,EAAAA,KAAC+C,EAAAA,EAAY,CAAC7C,KAAM,MACpBF,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SACZ,IAAI4C,KAAKzD,EAAKP,WAAWiE,mBAAmB,QAAS,CACpDC,IAAK,UACLC,MAAO,OACPC,KAAM,eAGVpD,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SAAC,YAChBJ,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SAAEb,EAAKJ,eAGxBkB,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAACvC,IAAI,KAAKK,EAAE,SAAQR,SAAA,EACxBJ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CAACxE,KAAM,MACjBF,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SAAC,iBAIpBJ,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACkC,UAAW,EAAGjC,EAAE,SAASI,GAAG,KAAIZ,SACnCb,EAAKT,WAGRkB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAACvC,IAAK,EAAEH,SACXb,EAAKH,KAAK8B,KAAKtB,IACdI,EAAAA,EAAAA,KAACyC,EAAAA,EAAK,CAEJE,QAAQ,UACRD,MAAM,OACNyB,MAAO,CAAEQ,OAAQ,WACjBC,QAASA,IAAMrG,EAAeqB,GAAKQ,SAElCR,GANIA,QAWXI,EAAAA,EAAAA,KAAC6E,EAAAA,EAAM,CACLlC,QAAQ,SACRD,MAAM,QACNoC,cAAc9E,EAAAA,EAAAA,KAAC+E,EAAAA,EAAc,CAAC7E,KAAM,KACpCW,GAAG,KAAIT,SACR,yBA7EIb,EAAKX,QAwFE,IAAzBS,EAAc2F,SACbhF,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAACC,YAAU,EAACC,QAAQ,KAAKC,OAAO,KAAIvB,UACvCC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAC+C,MAAM,SAAS9C,IAAI,KAAIH,SAAA,EAC5BJ,EAAAA,EAAAA,KAACW,EAAAA,EAAI,CAACT,KAAK,KAAIE,SAAC,sDAChBJ,EAAAA,EAAAA,KAAC6E,EAAAA,EAAM,CACLlC,QAAQ,SACRD,MAAM,QACNkC,QAASA,KACPrG,EAAe,IACfG,EAAoB,KAAK,EACzB0B,SACH,2BAOC,C","sources":["pages/Blog.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Title, Grid, Card, Image, Text, Badge, Group, Stack, TextInput, Select, Button } from '@mantine/core';\r\nimport { motion } from 'framer-motion';\r\nimport { IconSearch, IconCalendar, IconUser, IconArrowRight, IconShare } from '@tabler/icons-react';\r\nimport { BlogPost } from '../types';\r\n\r\nconst MotionDiv = motion.div;\r\n\r\nconst Blog: React.FC = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const categories = [\r\n    'All Posts',\r\n    'Tree Care Tips',\r\n    'Industry News',\r\n    'Environmental Impact',\r\n    'Safety Guidelines',\r\n    'Seasonal Advice'\r\n  ];\r\n\r\n  const blogPosts: BlogPost[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Essential Tree Care Tips for Winter',\r\n      content: `Winter can be harsh on trees, especially in the UK climate. Learn how to protect your trees \r\n      during the cold months with our expert tips on winter tree care...`,\r\n      author: 'James Smith',\r\n      createdAt: '2023-12-15',\r\n      category: 'Seasonal Advice',\r\n      imageUrl: '/assets/blog/winter-tree-care.jpg',\r\n      readTime: '5 min read',\r\n      tags: ['winter care', 'maintenance', 'seasonal']\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'The Environmental Benefits of Professional Tree Management',\r\n      content: `Proper tree management plays a crucial role in urban environmentalism. Discover how professional \r\n      tree care contributes to biodiversity and climate change mitigation...`,\r\n      author: 'Sarah Johnson',\r\n      createdAt: '2023-12-10',\r\n      category: 'Environmental Impact',\r\n      imageUrl: '/assets/blog/environmental-benefits.jpg',\r\n      readTime: '7 min read',\r\n      tags: ['environment', 'sustainability', 'urban forestry']\r\n    },\r\n    // Add more blog posts as needed\r\n  ];\r\n\r\n  const filteredPosts = blogPosts.filter(post => {\r\n    const matchesSearch = searchQuery === '' || \r\n      post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      post.content.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      post.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));\r\n    \r\n    const matchesCategory = !selectedCategory || \r\n      selectedCategory === 'All Posts' || \r\n      post.category === selectedCategory;\r\n\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  const featuredPosts = blogPosts.slice(0, 3);\r\n\r\n  return (\r\n    <Container size=\"xl\" py={80}>\r\n      <Stack gap={60}>\r\n        <div>\r\n          <Title order={1} size=\"3rem\" ta=\"center\">Tree Care Blog</Title>\r\n          <Text c=\"dimmed\" size=\"xl\" ta=\"center\" mt=\"md\" maw={800} mx=\"auto\">\r\n            Expert insights, tips, and news about tree care and maintenance from JS Tree Services.\r\n          </Text>\r\n        </div>\r\n\r\n        {/* Featured Posts */}\r\n        <div>\r\n          <Title order={2} size=\"h2\" mb={30}>Featured Articles</Title>\r\n          <Grid>\r\n            {featuredPosts.map((post, index) => (\r\n              <Grid.Col key={post.id} span={{ base: 12, md: 4 }}>\r\n                <Card\r\n                  withBorder\r\n                  padding=\"lg\"\r\n                  radius=\"md\"\r\n                  component={motion.div}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\r\n                >\r\n                  <Card.Section>\r\n                    <Image\r\n                      src={post.imageUrl}\r\n                      height={200}\r\n                      alt={post.title}\r\n                    />\r\n                  </Card.Section>\r\n\r\n                  <Stack mt=\"md\" gap=\"xs\">\r\n                    <Badge color=\"green\" variant=\"light\">\r\n                      {post.category}\r\n                    </Badge>\r\n                    <Text fw={500} size=\"lg\" lineClamp={2}>\r\n                      {post.title}\r\n                    </Text>\r\n                    <Group gap=\"xs\" c=\"dimmed\">\r\n                      <IconCalendar size={16} />\r\n                      <Text size=\"sm\">\r\n                        {new Date(post.createdAt).toLocaleDateString('en-GB', {\r\n                          day: 'numeric',\r\n                          month: 'long',\r\n                          year: 'numeric'\r\n                        })}\r\n                      </Text>\r\n                      <Text size=\"sm\">•</Text>\r\n                      <Text size=\"sm\">{post.readTime}</Text>\r\n                    </Group>\r\n                  </Stack>\r\n                </Card>\r\n              </Grid.Col>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n\r\n        {/* Search and Filter */}\r\n        <Grid align=\"flex-end\" gutter=\"xl\">\r\n          <Grid.Col span={{ base: 12, sm: 6 }}>\r\n            <TextInput\r\n              leftSection={<IconSearch size={18} />}\r\n              placeholder=\"Search articles...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              size=\"md\"\r\n            />\r\n          </Grid.Col>\r\n          <Grid.Col span={{ base: 12, sm: 6 }}>\r\n            <Select\r\n              placeholder=\"Select category\"\r\n              value={selectedCategory}\r\n              onChange={setSelectedCategory}\r\n              data={categories}\r\n              size=\"md\"\r\n              clearable\r\n            />\r\n          </Grid.Col>\r\n        </Grid>\r\n\r\n        {/* All Posts */}\r\n        <Grid>\r\n          {filteredPosts.map((post, index) => (\r\n            <Grid.Col key={post.id} span={12}>\r\n              <MotionDiv\r\n                style={{\r\n                  padding: '24px',\r\n                  border: '1px solid #eee',\r\n                  borderRadius: '8px',\r\n                  backgroundColor: 'white'\r\n                }}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5, delay: index * 0.1 }}\r\n              >\r\n                <Grid gutter={0}>\r\n                  <Grid.Col span={{ base: 12, md: 4 }}>\r\n                    <Image\r\n                      src={post.imageUrl}\r\n                      height={250}\r\n                      alt={post.title}\r\n                    />\r\n                  </Grid.Col>\r\n                  <Grid.Col span={{ base: 12, md: 8 }}>\r\n                    <Stack gap=\"xs\" p=\"xl\">\r\n                      <Group justify=\"space-between\">\r\n                        <Badge color=\"green\" variant=\"light\">\r\n                          {post.category}\r\n                        </Badge>\r\n                        <Group gap=\"xs\" c=\"dimmed\">\r\n                          <IconUser size={16} />\r\n                          <Text size=\"sm\">{post.author}</Text>\r\n                        </Group>\r\n                      </Group>\r\n                      \r\n                      <Title order={3}>{post.title}</Title>\r\n                      \r\n                      <Group justify=\"space-between\">\r\n                        <Group gap=\"xs\" c=\"dimmed\">\r\n                          <IconCalendar size={16} />\r\n                          <Text size=\"sm\">\r\n                            {new Date(post.createdAt).toLocaleDateString('en-GB', {\r\n                              day: 'numeric',\r\n                              month: 'long',\r\n                              year: 'numeric'\r\n                            })}\r\n                          </Text>\r\n                          <Text size=\"sm\">•</Text>\r\n                          <Text size=\"sm\">{post.readTime}</Text>\r\n                        </Group>\r\n                        \r\n                        <Group gap=\"xs\" c=\"dimmed\">\r\n                          <IconShare size={16} />\r\n                          <Text size=\"sm\">Share</Text>\r\n                        </Group>\r\n                      </Group>\r\n\r\n                      <Text lineClamp={3} c=\"dimmed\" mb=\"md\">\r\n                        {post.content}\r\n                      </Text>\r\n\r\n                      <Group gap={8}>\r\n                        {post.tags.map((tag) => (\r\n                          <Badge \r\n                            key={tag} \r\n                            variant=\"outline\" \r\n                            color=\"gray\"\r\n                            style={{ cursor: 'pointer' }}\r\n                            onClick={() => setSearchQuery(tag)}\r\n                          >\r\n                            {tag}\r\n                          </Badge>\r\n                        ))}\r\n                      </Group>\r\n\r\n                      <Button \r\n                        variant=\"subtle\" \r\n                        color=\"green\" \r\n                        rightSection={<IconArrowRight size={16} />}\r\n                        mt=\"md\"\r\n                      >\r\n                        Read More\r\n                      </Button>\r\n                    </Stack>\r\n                  </Grid.Col>\r\n                </Grid>\r\n              </MotionDiv>\r\n            </Grid.Col>\r\n          ))}\r\n        </Grid>\r\n\r\n        {filteredPosts.length === 0 && (\r\n          <Card withBorder padding=\"xl\" radius=\"md\">\r\n            <Stack align=\"center\" gap=\"md\">\r\n              <Text size=\"lg\">No articles found matching your search criteria.</Text>\r\n              <Button \r\n                variant=\"subtle\" \r\n                color=\"green\"\r\n                onClick={() => {\r\n                  setSearchQuery('');\r\n                  setSelectedCategory(null);\r\n                }}\r\n              >\r\n                Clear Filters\r\n              </Button>\r\n            </Stack>\r\n          </Card>\r\n        )}\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Blog;"],"names":["MotionDiv","motion","div","Blog","searchQuery","setSearchQuery","useState","selectedCategory","setSelectedCategory","blogPosts","id","title","content","author","createdAt","category","imageUrl","readTime","tags","filteredPosts","filter","post","matchesSearch","toLowerCase","includes","some","tag","matchesCategory","featuredPosts","slice","_jsx","Container","size","py","children","_jsxs","Stack","gap","Title","order","ta","Text","c","mt","maw","mx","mb","Grid","map","index","Col","span","base","md","Card","withBorder","padding","radius","component","initial","opacity","y","animate","transition","duration","delay","Section","Image","src","height","alt","Badge","color","variant","fw","lineClamp","Group","IconCalendar","Date","toLocaleDateString","day","month","year","align","gutter","sm","TextInput","leftSection","IconSearch","placeholder","value","onChange","e","target","Select","data","clearable","style","border","borderRadius","backgroundColor","p","justify","IconUser","IconShare","cursor","onClick","Button","rightSection","IconArrowRight","length"],"sourceRoot":""}